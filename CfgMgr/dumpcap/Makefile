# Makefile.in generated by automake 1.15.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am
# Automake file for Wireshark
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Makefile.am.inc
# Include file for Makefile.am files to get additional rules
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

#
# Add custom dictionaries here as:
# 	diameter/foo.xml
#

#




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/wireshark
pkgincludedir = $(includedir)/wireshark
pkglibdir = $(libdir)/wireshark
pkglibexecdir = $(libexecdir)/wireshark
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = mips64el-buildroot-linux-gnu
target_triplet = mips64el-buildroot-linux-gnu
EXTRA_PROGRAMS = wireshark-gtk$(EXEEXT) wireshark$(EXEEXT) \
	tshark$(EXEEXT) tfshark$(EXEEXT) capinfos$(EXEEXT) \
	captype$(EXEEXT) editcap$(EXEEXT) mergecap$(EXEEXT) \
	dftest$(EXEEXT) randpkt$(EXEEXT) text2pcap$(EXEEXT) \
	dumpcap$(EXEEXT) reordercap$(EXEEXT) mmdbresolve$(EXEEXT) \
	rawshark$(EXEEXT) sharkd$(EXEEXT) fuzzshark$(EXEEXT)
# Define compatibility macros for Qt 4.8
##am__append_1 = -DQ_NULLPTR=NULL
##am__append_2 = $(SPEEXDSP_LIBS)
#am__append_3 = $(SPEEXDSP_CFLAGS)
#am__append_4 = $(SPEEXDSP_LIBS)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_lib_socket_nsl.m4 \
	$(top_srcdir)/m4/ax_prog_cc_for_build.m4 \
	$(top_srcdir)/m4/libgcrypt.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_diameter_DATA) $(dist_dtds_DATA) \
	$(dist_pkgdata_DATA) $(dist_radius_DATA) $(dist_tpncp_DATA) \
	$(dist_wimaxasncp_DATA) $(nobase_dist_profiles_DATA) \
	$(noinst_HEADERS) $(pkginclude_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = doxygen.cfg wireshark.pc \
	packaging/macosx/Wireshark_package.pmdoc/index.xml
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(diameterdir)" \
	"$(DESTDIR)$(dtdsdir)" "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(radiusdir)" "$(DESTDIR)$(tpncpdir)" \
	"$(DESTDIR)$(wimaxasncpdir)" "$(DESTDIR)$(profilesdir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_capinfos_OBJECTS = capinfos-capinfos.$(OBJEXT) \
	capinfos-version_info.$(OBJEXT)
capinfos_OBJECTS = $(am_capinfos_OBJECTS)
capinfos_DEPENDENCIES = ui/libui.a wiretap/libwiretap.la \
	wsutil/libwsutil.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_captype_OBJECTS = captype-captype.$(OBJEXT) \
	captype-version_info.$(OBJEXT)
captype_OBJECTS = $(am_captype_OBJECTS)
captype_DEPENDENCIES = ui/libui.a wiretap/libwiretap.la \
	wsutil/libwsutil.la
am_dftest_OBJECTS = dftest-dftest.$(OBJEXT)
dftest_OBJECTS = $(am_dftest_OBJECTS)
am__DEPENDENCIES_1 =
dftest_DEPENDENCIES = ui/libui.a wiretap/libwiretap.la \
	wsutil/libwsutil.la epan/libwireshark.la $(am__DEPENDENCIES_1)
am_dumpcap_OBJECTS = dumpcap-capture_opts.$(OBJEXT) \
	dumpcap-capture_stop_conditions.$(OBJEXT) \
	dumpcap-conditions.$(OBJEXT) dumpcap-dumpcap.$(OBJEXT) \
	dumpcap-ringbuffer.$(OBJEXT) dumpcap-sync_pipe_write.$(OBJEXT) \
	dumpcap-version_info.$(OBJEXT)\
    /home/chenxu/LOONGSON-2k1000/src/CfgMgr/lib/mips64el/message.o
dumpcap_OBJECTS = $(am_dumpcap_OBJECTS)
dumpcap_DEPENDENCIES = caputils/libcaputils.a ui/libui.a \
	writecap/libwritecap.a wsutil/libwsutil.la
dumpcap_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dumpcap_CFLAGS) \
	$(CFLAGS) $(dumpcap_LDFLAGS) $(LDFLAGS) -lrt -o $@
am_editcap_OBJECTS = editcap-editcap.$(OBJEXT) \
	editcap-version_info.$(OBJEXT)
editcap_OBJECTS = $(am_editcap_OBJECTS)
editcap_DEPENDENCIES = ui/libui.a wiretap/libwiretap.la \
	wsutil/libwsutil.la
am__dirstamp = $(am__leading_dot)dirstamp
am_fuzzshark_OBJECTS =  \
	tools/oss-fuzzshark/fuzzshark-fuzzshark.$(OBJEXT) \
	tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.$(OBJEXT) \
	fuzzshark-version_info.$(OBJEXT)
fuzzshark_OBJECTS = $(am_fuzzshark_OBJECTS)
fuzzshark_DEPENDENCIES = wiretap/libwiretap.la epan/libwireshark.la \
	wsutil/libwsutil.la $(am__DEPENDENCIES_1)
fuzzshark_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(fuzzshark_LDFLAGS) $(LDFLAGS) -o $@
am_mergecap_OBJECTS = mergecap-mergecap.$(OBJEXT) \
	mergecap-version_info.$(OBJEXT)
mergecap_OBJECTS = $(am_mergecap_OBJECTS)
mergecap_DEPENDENCIES = ui/libui.a wiretap/libwiretap.la \
	wsutil/libwsutil.la
am_mmdbresolve_OBJECTS = mmdbresolve-mmdbresolve.$(OBJEXT)
mmdbresolve_OBJECTS = $(am_mmdbresolve_OBJECTS)
mmdbresolve_DEPENDENCIES =
mmdbresolve_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(mmdbresolve_LDFLAGS) $(LDFLAGS) -o $@
am_randpkt_OBJECTS = randpkt-randpkt.$(OBJEXT) \
	randpkt-version_info.$(OBJEXT)
randpkt_OBJECTS = $(am_randpkt_OBJECTS)
randpkt_DEPENDENCIES = randpkt_core/librandpkt_core.a ui/libui.a \
	wiretap/libwiretap.la wsutil/libwsutil.la
am__objects_1 = rawshark-cfile.$(OBJEXT) \
	rawshark-file_packet_provider.$(OBJEXT) \
	rawshark-frame_tvbuff.$(OBJEXT) \
	rawshark-sync_pipe_write.$(OBJEXT) rawshark-extcap.$(OBJEXT) \
	rawshark-extcap_parser.$(OBJEXT)
am_rawshark_OBJECTS = $(am__objects_1) rawshark-rawshark.$(OBJEXT) \
	rawshark-version_info.$(OBJEXT)
rawshark_OBJECTS = $(am_rawshark_OBJECTS)
rawshark_DEPENDENCIES = caputils/libcaputils.a ui/libui.a \
	wiretap/libwiretap.la epan/libwireshark.la wsutil/libwsutil.la \
	$(am__DEPENDENCIES_1)
rawshark_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(rawshark_LDFLAGS) $(LDFLAGS) -o $@
am_reordercap_OBJECTS = reordercap-reordercap.$(OBJEXT) \
	reordercap-version_info.$(OBJEXT)
reordercap_OBJECTS = $(am_reordercap_OBJECTS)
reordercap_DEPENDENCIES = ui/libui.a wiretap/libwiretap.la \
	wsutil/libwsutil.la
am__objects_2 = sharkd-cfile.$(OBJEXT) \
	sharkd-file_packet_provider.$(OBJEXT) \
	sharkd-frame_tvbuff.$(OBJEXT) sharkd-sync_pipe_write.$(OBJEXT) \
	sharkd-extcap.$(OBJEXT) sharkd-extcap_parser.$(OBJEXT)
am_sharkd_OBJECTS = $(am__objects_2) sharkd-sharkd.$(OBJEXT) \
	sharkd-sharkd_daemon.$(OBJEXT) sharkd-sharkd_session.$(OBJEXT) \
	sharkd-version_info.$(OBJEXT)
sharkd_OBJECTS = $(am_sharkd_OBJECTS)
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
sharkd_DEPENDENCIES = ui/cli/libcliui.a ui/libui.a \
	codecs/libwscodecs.la wiretap/libwiretap.la \
	epan/libwireshark.la wsutil/libwsutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
sharkd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(sharkd_LDFLAGS) $(LDFLAGS) -o $@
am_text2pcap_OBJECTS = text2pcap-text2pcap.$(OBJEXT) \
	text2pcap-text2pcap-scanner.$(OBJEXT) \
	text2pcap-version_info.$(OBJEXT)
text2pcap_OBJECTS = $(am_text2pcap_OBJECTS)
text2pcap_DEPENDENCIES = writecap/libwritecap.a wsutil/libwsutil.la
text2pcap_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(text2pcap_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_3 = tfshark-cfile.$(OBJEXT) \
	tfshark-file_packet_provider.$(OBJEXT) \
	tfshark-frame_tvbuff.$(OBJEXT) \
	tfshark-sync_pipe_write.$(OBJEXT) tfshark-extcap.$(OBJEXT) \
	tfshark-extcap_parser.$(OBJEXT)
am_tfshark_OBJECTS = $(am__objects_3) tfshark-tfshark.$(OBJEXT) \
	tfshark-version_info.$(OBJEXT)
tfshark_OBJECTS = $(am_tfshark_OBJECTS)
tfshark_DEPENDENCIES = ui/cli/libcliui.a ui/libui.a \
	wiretap/libwiretap.la epan/libwireshark.la wsutil/libwsutil.la \
	$(am__DEPENDENCIES_1)
tfshark_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(tfshark_LDFLAGS) $(LDFLAGS) -o $@
am__objects_4 = tshark-cfile.$(OBJEXT) \
	tshark-file_packet_provider.$(OBJEXT) \
	tshark-frame_tvbuff.$(OBJEXT) tshark-sync_pipe_write.$(OBJEXT) \
	tshark-extcap.$(OBJEXT) tshark-extcap_parser.$(OBJEXT)
am_tshark_OBJECTS = $(am__objects_4) tshark-capture_opts.$(OBJEXT) \
	tshark-tshark.$(OBJEXT) tshark-version_info.$(OBJEXT)
tshark_OBJECTS = $(am_tshark_OBJECTS)
tshark_DEPENDENCIES = capchild/libcapchild.a caputils/libcaputils.a \
	ui/cli/libcliui.a ui/libui.a wiretap/libwiretap.la \
	epan/libwireshark.la wsutil/libwsutil.la $(am__DEPENDENCIES_1)
tshark_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(tshark_LDFLAGS) $(LDFLAGS) -o $@
am__wireshark_SOURCES_DIST = cfile.c file_packet_provider.c \
	frame_tvbuff.c sync_pipe_write.c extcap.c extcap_parser.c \
	capture_info.c capture_opts.c file.c fileset.c version_info.c \
	wireshark-qt.cpp
am__objects_5 = wireshark-cfile.$(OBJEXT) \
	wireshark-file_packet_provider.$(OBJEXT) \
	wireshark-frame_tvbuff.$(OBJEXT) \
	wireshark-sync_pipe_write.$(OBJEXT) wireshark-extcap.$(OBJEXT) \
	wireshark-extcap_parser.$(OBJEXT)
am__objects_6 = $(am__objects_5) wireshark-capture_info.$(OBJEXT) \
	wireshark-capture_opts.$(OBJEXT) wireshark-file.$(OBJEXT) \
	wireshark-fileset.$(OBJEXT) wireshark-version_info.$(OBJEXT)
#am_wireshark_OBJECTS = $(am__objects_6) \
#	wireshark-wireshark-qt.$(OBJEXT)
wireshark_OBJECTS = $(am_wireshark_OBJECTS)
am__DEPENDENCIES_3 = capchild/libcapchild.a caputils/libcaputils.a \
	ui/libui.a ui/libui_generated.a codecs/libwscodecs.la \
	wiretap/libwiretap.la epan/libwireshark.la wsutil/libwsutil.la \
	$(am__DEPENDENCIES_1)
##am__DEPENDENCIES_4 =  \
##	$(am__DEPENDENCIES_1)
#wireshark_DEPENDENCIES = ui/qt/libqtui.a \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_4)
wireshark_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(wireshark_LDFLAGS) $(LDFLAGS) -o $@
am__wireshark_gtk_SOURCES_DIST = cfile.c file_packet_provider.c \
	frame_tvbuff.c sync_pipe_write.c extcap.c extcap_parser.c \
	capture_info.c capture_opts.c file.c fileset.c version_info.c
am__objects_7 = wireshark_gtk-cfile.$(OBJEXT) \
	wireshark_gtk-file_packet_provider.$(OBJEXT) \
	wireshark_gtk-frame_tvbuff.$(OBJEXT) \
	wireshark_gtk-sync_pipe_write.$(OBJEXT) \
	wireshark_gtk-extcap.$(OBJEXT) \
	wireshark_gtk-extcap_parser.$(OBJEXT)
am__objects_8 = $(am__objects_7) wireshark_gtk-capture_info.$(OBJEXT) \
	wireshark_gtk-capture_opts.$(OBJEXT) \
	wireshark_gtk-file.$(OBJEXT) wireshark_gtk-fileset.$(OBJEXT) \
	wireshark_gtk-version_info.$(OBJEXT)
#am_wireshark_gtk_OBJECTS = $(am__objects_8)
wireshark_gtk_OBJECTS = $(am_wireshark_gtk_OBJECTS)
#wireshark_gtk_DEPENDENCIES = ui/gtk/libgtkui.a \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1)
wireshark_gtk_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(wireshark_gtk_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
SOURCES = $(capinfos_SOURCES) $(captype_SOURCES) $(dftest_SOURCES) \
	$(dumpcap_SOURCES) $(editcap_SOURCES) $(fuzzshark_SOURCES) \
	$(mergecap_SOURCES) $(mmdbresolve_SOURCES) $(randpkt_SOURCES) \
	$(rawshark_SOURCES) $(reordercap_SOURCES) $(sharkd_SOURCES) \
	$(text2pcap_SOURCES) $(tfshark_SOURCES) $(tshark_SOURCES) \
	$(wireshark_SOURCES) $(wireshark_gtk_SOURCES)
DIST_SOURCES = $(capinfos_SOURCES) $(captype_SOURCES) \
	$(dftest_SOURCES) $(dumpcap_SOURCES) $(editcap_SOURCES) \
	$(fuzzshark_SOURCES) $(mergecap_SOURCES) \
	$(mmdbresolve_SOURCES) $(randpkt_SOURCES) $(rawshark_SOURCES) \
	$(reordercap_SOURCES) $(sharkd_SOURCES) $(text2pcap_SOURCES) \
	$(tfshark_SOURCES) $(tshark_SOURCES) \
	$(am__wireshark_SOURCES_DIST) \
	$(am__wireshark_gtk_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(dist_diameter_DATA) $(dist_dtds_DATA) $(dist_pkgdata_DATA) \
	$(dist_radius_DATA) $(dist_tpncp_DATA) $(dist_wimaxasncp_DATA) \
	$(nobase_dist_profiles_DATA) $(pkgconfig_DATA)
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__DIST_COMMON = $(srcdir)/./Makefile.am.inc $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(srcdir)/diameter/Custom.make \
	$(srcdir)/doxygen.cfg.in $(srcdir)/radius/Custom.make \
	$(srcdir)/wireshark.pc.in \
	$(top_srcdir)/packaging/macosx/Wireshark_package.pmdoc/index.xml.in \
	AUTHORS COPYING ChangeLog INSTALL NEWS compile config.guess \
	config.sub depcomp install-sh ltmain.sh missing \
	text2pcap-scanner.c ylwrap
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.xz
DIST_TARGETS = dist-xz
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4/missing aclocal-1.15
AC_MIN_VERSION = 2.64
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-ar
ASCIIDOCTOR = 
AUTOCONF = ${SHELL} /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4/missing autoconf
AUTOHEADER = ${SHELL} /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4/missing autoheader
AUTOMAKE = ${SHELL} /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4/missing automake-1.15
AWK = mawk
BCG729_LIBS = 
BUILD_EXEEXT = 
BUILD_OBJEXT = 
CC = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-gcc -std=gnu99
CCDEPMODE = depmode=none
CC_FOR_BUILD = /usr/bin/gcc
CFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -g
CFLAGS_FOR_BUILD = -O2 -I/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/include
CFLAGS_SSE42 = 
CONFIG_ARGS = --target=mips64el-buildroot-linux-gnu --host=mips64el-buildroot-linux-gnu --build=x86_64-pc-linux-gnu --prefix=/usr --exec-prefix=/usr --sysconfdir=/etc --localstatedir=/var --program-prefix= --disable-gtk-doc --disable-gtk-doc-html --disable-doc --disable-docs --disable-documentation --with-xmlto=no --with-fop=no --disable-dependency-tracking --enable-ipv6 --disable-nls --disable-static --enable-shared --disable-guides --enable-static=no --with-libsmi=no --with-pcap=yes --with-gtk=no --with-qt=no --disable-wireshark --without-bcg729 --without-c-ares --with-gnutls=no --without-krb5 --without-maxminddb --without-libnl --without-libssh --with-libxml2 --without-lua --without-lz4 --without-nghttp2 --with-sbc=no --without-snappy
CPP = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
CPPFLAGS_FOR_BUILD = -I/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/include
CPP_FOR_BUILD = /usr/bin/gcc -E
CXX = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-g++ -std=c++11
CXXCPP = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-g++ -E -std=c++11
CXXDEPMODE = depmode=none
CXXFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -g -g
CYGPATH_W = echo
C_ARES_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
DUMPCAP_GROUP = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GLIB_CFLAGS = -DG_DISABLE_SINGLE_INCLUDES -DG_DISABLE_DEPRECATED -isystem/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/include/glib-2.0 -isystem/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib/glib-2.0/include -isystem/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/include -pthread  
GLIB_LIBS = -L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  
GLIB_MIN_VERSION = 2.22.0
GREP = /bin/grep
GTK2_MIN_VERSION = 2.12.0
GTK3_MIN_VERSION = 3.0.0
GTK_CFLAGS = 
GTK_LIBS = 
GUI_CONFIGURE_FLAGS = 
HAVE_ASCIIDOCTOR = yes
HAVE_CXX11 = 1
HAVE_DOXYGEN = no
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KRB5_CFLAGS = 
KRB5_CONFIG = 
KRB5_LIBS = 
LD = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-ld -m elf64ltsmip
LDFLAGS = 
LDFLAGS_BIGSHAREDLIB = 
LDFLAGS_FOR_BUILD = -L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/lib -Wl,-rpath,/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/lib
LDFLAGS_SHAREDLIB = 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBCAP_LIBS = 
LIBGCRYPT_CFLAGS = -I/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/include
LIBGCRYPT_CONFIG = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/bin/libgcrypt-config
LIBGCRYPT_LIBS = -L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgcrypt -lgpg-error
LIBGNUTLS_CFLAGS = 
LIBGNUTLS_LIBS = 
LIBNL_CFLAGS = 
LIBNL_LIBS = 
LIBOBJS = 
LIBS = -lz -lm 
LIBSMI_CFLAGS = 
LIBSMI_LIBS = 
LIBSSH_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBXML2_CFLAGS = -I/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/include/libxml2  
LIBXML2_LIBS = -L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lxml2  
LIPO = 
LN_S = ln -s
LRELEASE = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUA_CFLAGS = 
LUA_LIBS = 
LZ4_LIBS = 
MAKEINFO = ${SHELL} /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4/missing makeinfo
MANIFEST_TOOL = :
MAXMINDDB_LIBS = 
MKDIR_P = /bin/mkdir -p
MOC = 
MOC_OPTIONS = 
NGHTTP2_LIBS = 
NM = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-nm
NMEDIT = 
NO_SANITIZE_CFLAGS = 
NO_SANITIZE_LDFLAGS = 
OBJDUMP = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = wireshark
PACKAGE_BUGREPORT = http://bugs.wireshark.org/
PACKAGE_NAME = Wireshark
PACKAGE_STRING = Wireshark 2.6.4
PACKAGE_TARNAME = wireshark
PACKAGE_URL = http://www.wireshark.org/
PACKAGE_VERSION = 2.6.4
PATH_SEPARATOR = :
PCAP_CFLAGS = -I/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/include
PCAP_CONFIG = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/bin/pcap-config
PCAP_LIBS = -L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap
PERL = /usr/bin/perl
PIE_CFLAGS = -fPIE
PIE_LDFLAGS = -pie
PKG_CONFIG = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLUGIN_LIBS = 
POD2HTML = /usr/bin/pod2html
POD2MAN = /usr/bin/pod2man
PORTAUDIO_INCLUDES = 
PORTAUDIO_LIBS = 
PYTHON = /usr/bin/python
QTCHOOSER = 
QT_MIN_VERSION = 4.8.0
Qt_CFLAGS = 
Qt_LDFLAGS = 
Qt_LIBS = 
RANLIB = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-ranlib
RCC = 
RPMBUILD = rpmbuild
RPMBUILD_WITH_ARGS = --without gtk2 --without gtk3 --without qt --without qt5 --without lua
RPM_VERSION = 2.6.4
SBC_CFLAGS = 
SBC_LIBS = 
SED = /bin/sed
SETCAP = /sbin/setcap
SET_MAKE = 
SHELL = /bin/bash
SHELLCHECK = 
SNAPPY_LIBS = 
SPANDSP_CFLAGS = 
SPANDSP_LIBS = 
SPEEXDSP_CFLAGS = 
SPEEXDSP_LIBS = 
STRIP = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/mips64el-linux-strip
UIC = 
VERSION = 2.6.4
VERSION_RELEASE = 2.6
WERROR = 
WS_CFLAGS = -Wall -Wextra -Wendif-labels -Wpointer-arith -Wformat-security -fwrapv -fno-strict-overflow -fno-delete-null-pointer-checks -Wvla -Waddress -Wattributes -Wdiv-by-zero -Wignored-qualifiers -Wpragmas -Wno-overlength-strings -Wno-long-long -Wc++-compat -Wshadow -Wno-pointer-sign -Wold-style-definition -Wstrict-prototypes -Wlogical-op -Wjump-misses-init -Werror=implicit -fexcess-precision=fast -fvisibility=hidden
WS_CFLAGS_FOR_BUILD = 
WS_CPPFLAGS = -D_FORTIFY_SOURCE=2
WS_CXXFLAGS = -Wall -Wextra -Wendif-labels -Wpointer-arith -Wformat-security -fwrapv -fno-strict-overflow -fno-delete-null-pointer-checks -Wvla -Waddress -Wattributes -Wdiv-by-zero -Wignored-qualifiers -Wpragmas -Wno-overlength-strings -Wno-long-long -fexcess-precision=fast -fvisibility=hidden
WS_LDFLAGS = -Wl,--as-needed
XSLTPROC = xsltproc
YACC = bison -y
YFLAGS = 
abs_builddir = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4
abs_srcdir = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4
abs_top_builddir = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4
abs_top_srcdir = /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CC_FOR_BUILD = /usr/bin/gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
androiddump_bin = androiddump$(EXEEXT)
androiddump_man = androiddump.1
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-pc-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
capinfos_bin = capinfos$(EXEEXT)
capinfos_man = capinfos.1
captype_bin = captype$(EXEEXT)
captype_man = captype.1
ciscodump_bin = 
ciscodump_man = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
dftest_bin = dftest$(EXEEXT)
dftest_man = dftest.1
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dumpcap_bin = dumpcap$(EXEEXT)
dumpcap_man = dumpcap.1
dvidir = ${docdir}
editcap_bin = editcap$(EXEEXT)
editcap_man = editcap.1
exec_prefix = /usr
extcap_man = extcap.4
extcapdir = ${libdir}/wireshark/extcap
fuzzshark_bin = fuzzshark$(EXEEXT)
host = mips64el-buildroot-linux-gnu
host_alias = mips64el-buildroot-linux-gnu
host_cpu = mips64el
host_os = linux-gnu
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/build/wireshark-2.6.4/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${datarootdir}/man
mergecap_bin = mergecap$(EXEEXT)
mergecap_man = mergecap.1
mkdir_p = $(MKDIR_P)
mmdbresolve_bin = 
mmdbresolve_man = 
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${libdir}/wireshark/plugins/2.6
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
randpkt_bin = randpkt$(EXEEXT)
randpkt_man = randpkt.1
randpktdump_bin = randpktdump$(EXEEXT)
randpktdump_man = randpktdump.1
rawshark_bin = rawshark$(EXEEXT)
rawshark_man = rawshark.1
reordercap_bin = reordercap$(EXEEXT)
reordercap_man = reordercap.1
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sharkd_bin = sharkd$(EXEEXT)
srcdir = .
sshdump_bin = 
sshdump_man = 
sysconfdir = /etc
target = mips64el-buildroot-linux-gnu
target_alias = mips64el-buildroot-linux-gnu
target_cpu = mips64el
target_os = linux-gnu
target_vendor = buildroot
text2pcap_bin = text2pcap$(EXEEXT)
text2pcap_man = text2pcap.1
tfshark_bin = 
tfshark_man = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
tshark_bin = tshark$(EXEEXT)
tshark_man = tshark.1
udpdump_bin = udpdump$(EXEEXT)
udpdump_man = udpdump.1
wireshark_SUBDIRS = 
wireshark_bin = 
wireshark_man = 
wiresharkfilter_man = wireshark-filter.4
AUTOMAKE_OPTIONS = -Wno-portability
lemon_srcdir = $(top_srcdir)/tools/lemon
lemon_builddir = $(top_builddir)/tools/lemon
LEMON = $(lemon_builddir)/lemon$(EXEEXT)
INCLUDEDIRS = -I$(top_srcdir)

#AM_CPPFLAGS = $(INCLUDEDIRS) $(WS_CPPFLAGS)
AM_CFLAGS = $(WERROR) $(WS_CFLAGS)
DIRTY_CFLAGS = $(WS_CFLAGS)
AM_CXXFLAGS = $(WERROR) $(WS_CXXFLAGS)
DIRTY_CXXFLAGS = $(WS_CXXFLAGS)
AM_LDFLAGS = $(WS_LDFLAGS)
AM_V_PERL = $(am__v_PERL_$(V))
am__v_PERL_ = $(am__v_PERL_$(AM_DEFAULT_VERBOSITY))
am__v_PERL_0 = @echo "  PERL    " $@;
AM_V_AWK = $(am__v_AWK_$(V))
am__v_AWK_ = $(am__v_AWK_$(AM_DEFAULT_VERBOSITY))
am__v_AWK_0 = @echo "  AWK     " $@;
AM_V_LEMON = $(am__v_LEMON_$(V))
am__v_LEMON_ = $(am__v_LEMON_$(AM_DEFAULT_VERBOSITY))
am__v_LEMON_0 = @echo "  LEMON   " $@;
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
AM_V_SED = $(am__v_SED_$(V))
am__v_SED_ = $(am__v_SED_$(AM_DEFAULT_VERBOSITY))
am__v_SED_0 = @echo "  SED     " $@;
AM_V_LN_S = $(am__v_LN_S_$(V))
am__v_LN_S_ = $(am__v_LN_S_$(AM_DEFAULT_VERBOSITY))
am__v_LN_S_0 = @echo "  LN_S    " $@;

# _PYTHON is a reserved automake keyword
AM_V_python = $(am__v_python_$(V))
am__v_python_ = $(am__v_python_$(AM_DEFAULT_VERBOSITY))
am__v_python_0 = @echo "  PYTHON  " $@;
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
AM_DISTCHECK_CONFIGURE_FLAGS = 
# Make sure to keep ACLOCAL_AMFLAGS in Makefile.am and AC_CONFIG_MACRO_DIRS
# in configure.ac in sync, otherwise there will be an error running autogen.sh.
ACLOCAL_AMFLAGS = -I m4

# Common headers
COMMONCPPFLAGS = 
AM_CPPFLAGS = $(INCLUDEDIRS) $(WS_CPPFLAGS) $(COMMONCPPFLAGS)
bin_PROGRAMS = \
	capinfos$(EXEEXT)		\
	captype$(EXEEXT)		\
	dumpcap$(EXEEXT)		\
	editcap$(EXEEXT)		\
	mergecap$(EXEEXT)		\
		\
	randpkt$(EXEEXT)		\
	rawshark$(EXEEXT)		\
	reordercap$(EXEEXT)	\
	sharkd$(EXEEXT)		\
	text2pcap$(EXEEXT)		\
			\
	tshark$(EXEEXT)		\
	

noinst_PROGRAMS = \
	dftest$(EXEEXT)		\
	fuzzshark$(EXEEXT)


#
# Wireshark configuration files are put in $(pkgdatadir).
#
dist_pkgdata_DATA = COPYING manuf services cfilters colorfilters dfilters \
	smi_modules pdml2html.xsl enterprises.tsv wka

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = wireshark.pc

#
# Install global profiles in the "profiles" subdirectory
#
profilesdir = $(pkgdatadir)
nobase_dist_profiles_DATA = \
	profiles/Bluetooth/colorfilters \
	profiles/Bluetooth/preferences \
	profiles/Classic/colorfilters


#
# Install the Diameter DTD and XML files in the "diameter" subdirectory
# of that directory.
#
diameterdir = $(pkgdatadir)/diameter
_CUSTOM_diameter_xml_files_ = 
dist_diameter_DATA = $(_CUSTOM_diameter_xml_files_) \
	diameter/chargecontrol.xml \
	diameter/Cisco.xml \
	diameter/CiscoSystems.xml \
	diameter/Custom.xml \
	diameter/dictionary.dtd \
	diameter/dictionary.xml \
	diameter/eap.xml \
	diameter/Ericsson.xml \
	diameter/etsie2e4.xml \
	diameter/Inovar.xml \
	diameter/Juniper.xml \
	diameter/mobileipv4.xml \
	diameter/mobileipv6.xml \
	diameter/nasreq.xml \
	diameter/sip.xml \
	diameter/Starent.xml \
	diameter/sunping.xml \
	diameter/TGPP.xml \
	diameter/TGPP2.xml \
	diameter/Vodafone.xml \
	diameter/AlcatelLucent.xml \
	diameter/Nokia.xml \
	diameter/NokiaSolutionsAndNetworks.xml \
	diameter/HP.xml \
	diameter/Huawei.xml \
	diameter/Oracle.xml \
	diameter/VerizonWireless.xml


#
# Install the DTDs directory files in the "dtds" subdirectory
# of that directory
#
dtdsdir = $(pkgdatadir)/dtds
dist_dtds_DATA = \
	dtds/dc.dtd \
	dtds/itunes.dtd \
	dtds/mscml.dtd \
	dtds/pocsettings.dtd \
	dtds/presence.dtd \
	dtds/reginfo.dtd \
	dtds/rlmi.dtd \
	dtds/rss.dtd \
	dtds/smil.dtd \
	dtds/xcap-caps.dtd \
	dtds/xcap-error.dtd \
	dtds/watcherinfo.dtd


#
# Install the RADIUS directory files in the "radius" subdirectory
# of that directory.
#
radiusdir = $(pkgdatadir)/radius
_CUSTOM_radius_dict_ = 
dist_radius_DATA = $(_CUSTOM_radius_dict_) \
	radius/README.radius_dictionary \
	radius/custom.includes \
	radius/dictionary \
	radius/dictionary.3com \
	radius/dictionary.3gpp \
	radius/dictionary.3gpp2 \
	radius/dictionary.acc \
	radius/dictionary.acme \
	radius/dictionary.actelis \
	radius/dictionary.aerohive \
	radius/dictionary.airespace \
	radius/dictionary.alcatel \
	radius/dictionary.alcatel-lucent.aaa \
	radius/dictionary.alcatel.esam \
	radius/dictionary.alcatel.sr \
	radius/dictionary.alteon \
	radius/dictionary.altiga \
	radius/dictionary.alvarion \
	radius/dictionary.alvarion.wimax.v2_2 \
	radius/dictionary.apc \
	radius/dictionary.aptis \
	radius/dictionary.arbor \
	radius/dictionary.aruba \
	radius/dictionary.ascend \
	radius/dictionary.asn \
	radius/dictionary.audiocodes \
	radius/dictionary.avaya \
	radius/dictionary.azaire \
	radius/dictionary.bay \
	radius/dictionary.bintec \
	radius/dictionary.bluecoat \
	radius/dictionary.bristol \
	radius/dictionary.broadsoft \
	radius/dictionary.brocade \
	radius/dictionary.bskyb \
	radius/dictionary.bt \
	radius/dictionary.cablelabs \
	radius/dictionary.cabletron \
	radius/dictionary.camiant \
	radius/dictionary.chillispot \
	radius/dictionary.cisco \
	radius/dictionary.cisco.asa \
	radius/dictionary.cisco.bbsm \
	radius/dictionary.cisco.vpn3000 \
	radius/dictionary.cisco.vpn5000 \
	radius/dictionary.citrix \
	radius/dictionary.clavister \
	radius/dictionary.cnergee \
	radius/dictionary.colubris \
	radius/dictionary.columbia_university \
	radius/dictionary.compat \
	radius/dictionary.compatible \
	radius/dictionary.cosine \
	radius/dictionary.dante \
	radius/dictionary.dellemc \
	radius/dictionary.dhcp \
	radius/dictionary.digium \
	radius/dictionary.dlink \
	radius/dictionary.dragonwave \
	radius/dictionary.efficientip \
	radius/dictionary.eltex \
	radius/dictionary.epygi \
	radius/dictionary.equallogic \
	radius/dictionary.ericsson \
	radius/dictionary.ericsson.ab \
	radius/dictionary.ericsson.packet.core.networks \
	radius/dictionary.extreme \
	radius/dictionary.f5 \
	radius/dictionary.fdxtended \
	radius/dictionary.fortinet \
	radius/dictionary.foundry \
	radius/dictionary.freedhcp \
	radius/dictionary.freeradius \
	radius/dictionary.freeradius.internal \
	radius/dictionary.freeswitch \
	radius/dictionary.gandalf \
	radius/dictionary.garderos \
	radius/dictionary.gemtek \
	radius/dictionary.h3c \
	radius/dictionary.hp \
	radius/dictionary.huawei \
	radius/dictionary.iana \
	radius/dictionary.iea \
	radius/dictionary.infoblox \
	radius/dictionary.infonet \
	radius/dictionary.ipunplugged \
	radius/dictionary.issanni \
	radius/dictionary.itk \
	radius/dictionary.jradius \
	radius/dictionary.juniper \
	radius/dictionary.karlnet \
	radius/dictionary.kineto \
	radius/dictionary.lancom \
	radius/dictionary.livingston \
	radius/dictionary.localweb \
	radius/dictionary.lucent \
	radius/dictionary.manzara \
	radius/dictionary.meinberg \
	radius/dictionary.merit \
	radius/dictionary.meru \
	radius/dictionary.microsemi \
	radius/dictionary.microsoft \
	radius/dictionary.mikrotik \
	radius/dictionary.motorola \
	radius/dictionary.motorola.wimax \
	radius/dictionary.navini \
	radius/dictionary.netscreen \
	radius/dictionary.networkphysics \
	radius/dictionary.nexans \
	radius/dictionary.nokia \
	radius/dictionary.nokia.conflict \
	radius/dictionary.nomadix \
	radius/dictionary.nortel \
	radius/dictionary.ntua \
	radius/dictionary.openser \
	radius/dictionary.packeteer \
	radius/dictionary.paloalto \
	radius/dictionary.patton \
	radius/dictionary.perle \
	radius/dictionary.propel \
	radius/dictionary.prosoft \
	radius/dictionary.proxim \
	radius/dictionary.purewave \
	radius/dictionary.quiconnect \
	radius/dictionary.quintum \
	radius/dictionary.redcreek \
	radius/dictionary.rfc2865 \
	radius/dictionary.rfc2866 \
	radius/dictionary.rfc2867 \
	radius/dictionary.rfc2868 \
	radius/dictionary.rfc2869 \
	radius/dictionary.rfc3162 \
	radius/dictionary.rfc3576 \
	radius/dictionary.rfc3580 \
	radius/dictionary.rfc4072 \
	radius/dictionary.rfc4372 \
	radius/dictionary.rfc4603 \
	radius/dictionary.rfc4675 \
	radius/dictionary.rfc4679 \
	radius/dictionary.rfc4818 \
	radius/dictionary.rfc4849 \
	radius/dictionary.rfc5090 \
	radius/dictionary.rfc5176 \
	radius/dictionary.rfc5447 \
	radius/dictionary.rfc5580 \
	radius/dictionary.rfc5607 \
	radius/dictionary.rfc5904 \
	radius/dictionary.rfc6519 \
	radius/dictionary.rfc6572 \
	radius/dictionary.rfc6677 \
	radius/dictionary.rfc6911 \
	radius/dictionary.rfc6929 \
	radius/dictionary.rfc6930 \
	radius/dictionary.rfc7055 \
	radius/dictionary.rfc7155 \
	radius/dictionary.rfc7268 \
	radius/dictionary.rfc7499 \
	radius/dictionary.rfc7930 \
	radius/dictionary.riverbed \
	radius/dictionary.riverstone \
	radius/dictionary.roaringpenguin \
	radius/dictionary.ruckus \
	radius/dictionary.ruggedcom \
	radius/dictionary.sangoma \
	radius/dictionary.sg \
	radius/dictionary.shasta \
	radius/dictionary.shiva \
	radius/dictionary.siemens \
	radius/dictionary.slipstream \
	radius/dictionary.sofaware \
	radius/dictionary.sonicwall \
	radius/dictionary.springtide \
	radius/dictionary.starent \
	radius/dictionary.starent.vsa1 \
	radius/dictionary.surfnet \
	radius/dictionary.symbol \
	radius/dictionary.t_systems_nova \
	radius/dictionary.telebit \
	radius/dictionary.telkom \
	radius/dictionary.terena \
	radius/dictionary.trapeze \
	radius/dictionary.travelping \
	radius/dictionary.tropos \
	radius/dictionary.ukerna \
	radius/dictionary.unisphere \
	radius/dictionary.unix \
	radius/dictionary.usr \
	radius/dictionary.utstarcom \
	radius/dictionary.valemount \
	radius/dictionary.versanet \
	radius/dictionary.vqp \
	radius/dictionary.walabi \
	radius/dictionary.waverider \
	radius/dictionary.wichorus \
	radius/dictionary.wimax \
	radius/dictionary.wimax.alvarion \
	radius/dictionary.wimax.wichorus \
	radius/dictionary.wispr \
	radius/dictionary.xedia \
	radius/dictionary.xylan \
	radius/dictionary.yubico \
	radius/dictionary.zeus \
	radius/dictionary.zte \
	radius/dictionary.zyxel


#
# Install the tpncp directory files in the "tpncp" subdirectory
# of that directory
#
tpncpdir = $(pkgdatadir)/tpncp
dist_tpncp_DATA = \
	tpncp/tpncp.dat


#
# Install the wimaxasncp directory files in the "wimaxasncp" subdirectory
# of that directory
#
wimaxasncpdir = $(pkgdatadir)/wimaxasncp
dist_wimaxasncp_DATA = \
	wimaxasncp/dictionary.xml \
	wimaxasncp/dictionary.dtd


# "BUILT_SOURCES" are built before any "make all" or "make check" targets.
BUILT_HEADER_FILES = \
	version.h

BUILT_C_FILES = 
BUILT_SOURCES = $(BUILT_C_FILES) $(BUILT_HEADER_FILES)

# Header files generated from source files.
GENERATED_HEADER_FILES = \
	text2pcap-scanner_lex.h \
	$(BUILT_HEADER_FILES)


# C source files generated from source files.
GENERATED_C_FILES = 

# All the generated files.
GENERATED_FILES = $(GENERATED_C_FILES) $(GENERATED_HEADER_FILES)

# sources common for wireshark, tshark, and rawshark
SHARK_COMMON_SRC = \
	cfile.c			\
	file_packet_provider.c	\
	frame_tvbuff.c		\
	sync_pipe_write.c	\
	extcap.c		\
	extcap_parser.c


# wireshark specifics
WIRESHARK_COMMON_SRC = \
	$(SHARK_COMMON_SRC)	\
	capture_info.c		\
	capture_opts.c		\
	file.c			\
	fileset.c		\
	version_info.c

EPAN_EXTRA_LIBS = \
				\
				\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgcrypt -lgpg-error		\
			\
	


# Libraries and plugin flags with which to link wireshark.
#
# GTK_CFLAGS/GTK_LIBS is a strict superset of GLIB_CFLAGS/GLIB_LIBS
# (see configure.ac for pkg-config modules used).
#
wireshark_common_ldadd = \
	capchild/libcapchild.a		\
	caputils/libcaputils.a		\
	ui/libui.a			\
	ui/libui_generated.a		\
	codecs/libwscodecs.la		\
	wiretap/libwiretap.la		\
	epan/libwireshark.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap			\
	$(EPAN_EXTRA_LIBS)		\
	

#wireshark_SOURCES = $(WIRESHARK_COMMON_SRC) wireshark-qt.cpp
#wireshark_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS) \
#	$(Qt_CFLAGS) $(am__append_1)
#wireshark_LDFLAGS = $(AM_LDFLAGS) $(Qt_LDFLAGS)
#wireshark_LDADD = ui/qt/libqtui.a \
#	$(wireshark_common_ldadd) $(GLIB_LIBS) \
#	$(Qt_LIBS) $(am__append_2)
#wireshark_gtk_SOURCES = $(WIRESHARK_COMMON_SRC)
#wireshark_gtk_CPPFLAGS = $(AM_CPPFLAGS) $(GTK_CFLAGS)
#wireshark_gtk_LDFLAGS = $(AM_LDFLAGS)
#wireshark_gtk_LDADD = \
#	ui/gtk/libgtkui.a		\
#	$(wireshark_common_ldadd)	\
#	$(GTK_LIBS)			\
#	

fuzzshark_SOURCES = \
	tools/oss-fuzzshark/fuzzshark.c \
	tools/oss-fuzzshark/StandaloneFuzzTargetMain.c \
	version_info.c

fuzzshark_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)
fuzzshark_LDFLAGS = $(AM_LDFLAGS)
fuzzshark_LDADD = \
	wiretap/libwiretap.la		\
	epan/libwireshark.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	${EPAN_EXTRA_LIBS}

tshark_SOURCES = \
	$(SHARK_COMMON_SRC)	\
	capture_opts.c		\
	tshark.c		\
	version_info.c

tshark_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)
tshark_LDFLAGS = $(AM_LDFLAGS)

# Libraries and plugin flags with which to link tshark.
tshark_LDADD = \
	capchild/libcapchild.a		\
	caputils/libcaputils.a		\
	ui/cli/libcliui.a		\
	ui/libui.a			\
	wiretap/libwiretap.la		\
	epan/libwireshark.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap			\
	${EPAN_EXTRA_LIBS}

tfshark_SOURCES = \
	$(SHARK_COMMON_SRC)	\
	tfshark.c		\
	version_info.c

tfshark_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)
tfshark_LDFLAGS = $(AM_LDFLAGS)

# Libraries and plugin flags with which to link tfshark.
tfshark_LDADD = \
	ui/cli/libcliui.a		\
	ui/libui.a			\
	wiretap/libwiretap.la		\
	epan/libwireshark.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap			\
	${EPAN_EXTRA_LIBS}

rawshark_SOURCES = \
	$(SHARK_COMMON_SRC)	\
	rawshark.c		\
	version_info.c

rawshark_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)
rawshark_LDFLAGS = $(AM_LDFLAGS)

# Libraries and plugin flags with which to link rawshark.
rawshark_LDADD = \
	caputils/libcaputils.a		\
	ui/libui.a			\
	wiretap/libwiretap.la		\
	epan/libwireshark.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap			\
	${EPAN_EXTRA_LIBS}

mmdbresolve_SOURCES = mmdbresolve.c
mmdbresolve_CPPFLAGS = $(AM_CPPFLAGS)
mmdbresolve_LDFLAGS = $(AM_LDFLAGS)
mmdbresolve_LDADD = 
sharkd_SOURCES = \
	$(SHARK_COMMON_SRC)	\
	sharkd.c		\
	sharkd.h		\
	sharkd_daemon.c		\
	sharkd_session.c	\
	version_info.c

sharkd_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS) $(am__append_3)
sharkd_LDFLAGS = $(AM_LDFLAGS)

# Libraries and plugin flags with which to link sharkd.
sharkd_LDADD = ui/cli/libcliui.a ui/libui.a codecs/libwscodecs.la \
	wiretap/libwiretap.la epan/libwireshark.la wsutil/libwsutil.la \
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0   -L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap ${EPAN_EXTRA_LIBS} $(am__append_4)
text2pcap_SOURCES = \
	text2pcap.c		\
	text2pcap-scanner.l	\
	version_info.c

text2pcap_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)
text2pcap_CFLAGS = $(AM_CFLAGS)

# Libraries with which to link text2pcap.
text2pcap_LDADD = \
	writecap/libwritecap.a		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  

mergecap_SOURCES = \
	mergecap.c	\
	version_info.c

mergecap_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)

# Libraries with which to link mergecap.
mergecap_LDADD = \
	ui/libui.a			\
	wiretap/libwiretap.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  

capinfos_SOURCES = \
	capinfos.c	\
	version_info.c

capinfos_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)

# Libraries with which to link capinfos.
capinfos_LDADD = \
	ui/libui.a			\
	wiretap/libwiretap.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgcrypt -lgpg-error

captype_SOURCES = \
	captype.c	\
	version_info.c

captype_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)

# Libraries with which to link captype.
captype_LDADD = \
	ui/libui.a			\
	wiretap/libwiretap.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  

editcap_SOURCES = \
	editcap.c	\
	version_info.c

editcap_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)

# Libraries with which to link editcap.
editcap_LDADD = \
	ui/libui.a			\
	wiretap/libwiretap.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgcrypt -lgpg-error

reordercap_SOURCES = \
	reordercap.c	\
	version_info.c

reordercap_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)

# Libraries with which to link reordercap.
reordercap_LDADD = \
	ui/libui.a			\
	wiretap/libwiretap.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  

randpkt_SOURCES = \
	randpkt.c	\
	version_info.c

randpkt_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)

# Libraries with which to link randpkt.
randpkt_LDADD = \
	randpkt_core/librandpkt_core.a	\
	ui/libui.a			\
	wiretap/libwiretap.la		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap			\
	

dftest_SOURCES = \
	dftest.c

dftest_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)

# Libraries and plugin flags with which to link dftest.
dftest_LDADD = \
	ui/libui.a			\
	wiretap/libwiretap.la		\
	wsutil/libwsutil.la		\
	epan/libwireshark.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap			\
	${EPAN_EXTRA_LIBS}

dumpcap_SOURCES = \
	capture_opts.c			\
	capture_stop_conditions.c	\
	conditions.c			\
	dumpcap.c			\
	ringbuffer.c			\
	sync_pipe_write.c		\
	version_info.c

dumpcap_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)
dumpcap_CFLAGS = $(AM_CFLAGS) $(PIE_CFLAGS) -I/home/chenxu/LOONGSON-2k1000/src/CfgMgr/inc
dumpcap_LDFLAGS = $(AM_LDFLAGS) $(PIE_LDFLAGS)

# Libraries with which to link dumpcap.
dumpcap_LDADD = \
	caputils/libcaputils.a		\
	ui/libui.a			\
	writecap/libwritecap.a		\
	wsutil/libwsutil.la		\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/bin/../mips64el-buildroot-linux-gnu/sysroot/usr/lib -lgthread-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0  			\
	-L/home/chenxu/LOONGSON-2k1000/toolchain/buildroot/output/host/mips64el-buildroot-linux-gnu/sysroot/usr/lib  -lpcap			\
				\
	

pkginclude_HEADERS = \
	cfile.h			\
	file.h			\
	globals.h		\
	log.h			\
	ws_attributes.h		\
	ws_compiler_tests.h	\
	ws_diag_control.h	\
	ws_symbol_export.h


# this target needed for distribution only
noinst_HEADERS = \
	tools/oss-fuzzshark/FuzzerInterface.h \
	capture_info.h		\
	capture_opts.h		\
	capture_stop_conditions.h	\
	conditions.h		\
	extcap.h		\
	extcap_parser.h		\
	fileset.h		\
	frame_tvbuff.h		\
	ringbuffer.h		\
	sync_pipe.h		\
	version_info.h


#
# Build shell scripts by doing variable substitution.
# Taken from autoconf 2.13.
#
editsh = sed -e 's,@''SHELL''@,$(SHELL),g'
SUFFIXES = .sh
CLEANFILES = \
	doxygen-core.tag	\
	vgcore.*

DISTCLEANFILES = \
	version.h

MAINTAINERCLEANFILES = \
	$(GENERATED_FILES)

EXTRA_DIST = \
	.editorconfig		\
	.mailmap		\
	INSTALL.configure	\
	Makefile.am.inc		\
	README.aix		\
	README.bsd		\
	README.DECT		\
	README.hpux		\
	README.linux		\
	README.macos		\
	README.md		\
	README.windows		\
	abi-descriptor.template	\
	autogen.sh		\
	cfilters		\
	colorfilters		\
	debian			\
	dfilters		\
	doxygen_global.cfg	\
	doxygen.cfg.in		\
	enterprises.tsv		\
	fix			\
	idl			\
	image			\
	m4			\
	macosx-support-lib-patches	\
	make-version.pl		\
	manuf			\
	manuf.tmpl		\
	pdml2html.xsl		\
	smi_modules		\
	text2pcap-scanner.l	\
	text2pcap.h		\
	services		\
	wireshark.desktop	\
	wireshark-gtk.desktop	\
	wireshark-mime-package.xml	\
	wireshark.appdata.xml	\
	wireshark.pc.in		\
	wka			\
	CMakeLists.txt		\
	CMakeListsCustom.txt.example	\
	cmakeconfig.h.in	\
	CMakeOptions.txt	\
	ConfigureChecks.cmake	\
	cmake

plugins_subdir = plugins
extcap_subdir = extcap
DIST_SUBDIRS = \
	capchild	\
	caputils	\
	codecs		\
	doc		\
	docbook		\
	epan		\
	ui		\
	ui/cli		\
	ui/gtk		\
	ui/qt		\
	help		\
	packaging	\
	plugins		\
	randpkt_core	\
	tools		\
	wiretap		\
	writecap	\
	wsutil		\
	extcap

SUBDIRS = \
	tools			\
	wsutil			\
	writecap		\
	wiretap			\
	epan			\
	capchild		\
	caputils		\
	$(plugins_subdir)	\
	help			\
	ui			\
	codecs			\
		\
	ui/cli			\
	randpkt_core		\
	$(extcap_subdir)	\
	.			\
	doc			\
	docbook

all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .sh .c .cpp .l .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/./Makefile.am.inc $(srcdir)/diameter/Custom.make $(srcdir)/radius/Custom.make $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/./Makefile.am.inc $(srcdir)/diameter/Custom.make $(srcdir)/radius/Custom.make $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
doxygen.cfg: $(top_builddir)/config.status $(srcdir)/doxygen.cfg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
wireshark.pc: $(top_builddir)/config.status $(srcdir)/wireshark.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
packaging/macosx/Wireshark_package.pmdoc/index.xml: $(top_builddir)/config.status $(top_srcdir)/packaging/macosx/Wireshark_package.pmdoc/index.xml.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

capinfos$(EXEEXT): $(capinfos_OBJECTS) $(capinfos_DEPENDENCIES) $(EXTRA_capinfos_DEPENDENCIES) 
	@rm -f capinfos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(capinfos_OBJECTS) $(capinfos_LDADD) $(LIBS)

captype$(EXEEXT): $(captype_OBJECTS) $(captype_DEPENDENCIES) $(EXTRA_captype_DEPENDENCIES) 
	@rm -f captype$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(captype_OBJECTS) $(captype_LDADD) $(LIBS)

dftest$(EXEEXT): $(dftest_OBJECTS) $(dftest_DEPENDENCIES) $(EXTRA_dftest_DEPENDENCIES) 
	@rm -f dftest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dftest_OBJECTS) $(dftest_LDADD) $(LIBS)

dumpcap$(EXEEXT): $(dumpcap_OBJECTS) $(dumpcap_DEPENDENCIES) $(EXTRA_dumpcap_DEPENDENCIES) 
	@rm -f dumpcap$(EXEEXT)
	$(AM_V_CCLD)$(dumpcap_LINK) $(dumpcap_OBJECTS) $(dumpcap_LDADD) $(LIBS)

editcap$(EXEEXT): $(editcap_OBJECTS) $(editcap_DEPENDENCIES) $(EXTRA_editcap_DEPENDENCIES) 
	@rm -f editcap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(editcap_OBJECTS) $(editcap_LDADD) $(LIBS)
tools/oss-fuzzshark/$(am__dirstamp):
	@$(MKDIR_P) tools/oss-fuzzshark
	@: > tools/oss-fuzzshark/$(am__dirstamp)
tools/oss-fuzzshark/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/oss-fuzzshark/$(DEPDIR)
	@: > tools/oss-fuzzshark/$(DEPDIR)/$(am__dirstamp)
tools/oss-fuzzshark/fuzzshark-fuzzshark.$(OBJEXT):  \
	tools/oss-fuzzshark/$(am__dirstamp) \
	tools/oss-fuzzshark/$(DEPDIR)/$(am__dirstamp)
tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.$(OBJEXT):  \
	tools/oss-fuzzshark/$(am__dirstamp) \
	tools/oss-fuzzshark/$(DEPDIR)/$(am__dirstamp)

fuzzshark$(EXEEXT): $(fuzzshark_OBJECTS) $(fuzzshark_DEPENDENCIES) $(EXTRA_fuzzshark_DEPENDENCIES) 
	@rm -f fuzzshark$(EXEEXT)
	$(AM_V_CCLD)$(fuzzshark_LINK) $(fuzzshark_OBJECTS) $(fuzzshark_LDADD) $(LIBS)

mergecap$(EXEEXT): $(mergecap_OBJECTS) $(mergecap_DEPENDENCIES) $(EXTRA_mergecap_DEPENDENCIES) 
	@rm -f mergecap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mergecap_OBJECTS) $(mergecap_LDADD) $(LIBS)

mmdbresolve$(EXEEXT): $(mmdbresolve_OBJECTS) $(mmdbresolve_DEPENDENCIES) $(EXTRA_mmdbresolve_DEPENDENCIES) 
	@rm -f mmdbresolve$(EXEEXT)
	$(AM_V_CCLD)$(mmdbresolve_LINK) $(mmdbresolve_OBJECTS) $(mmdbresolve_LDADD) $(LIBS)

randpkt$(EXEEXT): $(randpkt_OBJECTS) $(randpkt_DEPENDENCIES) $(EXTRA_randpkt_DEPENDENCIES) 
	@rm -f randpkt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(randpkt_OBJECTS) $(randpkt_LDADD) $(LIBS)

rawshark$(EXEEXT): $(rawshark_OBJECTS) $(rawshark_DEPENDENCIES) $(EXTRA_rawshark_DEPENDENCIES) 
	@rm -f rawshark$(EXEEXT)
	$(AM_V_CCLD)$(rawshark_LINK) $(rawshark_OBJECTS) $(rawshark_LDADD) $(LIBS)

reordercap$(EXEEXT): $(reordercap_OBJECTS) $(reordercap_DEPENDENCIES) $(EXTRA_reordercap_DEPENDENCIES) 
	@rm -f reordercap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reordercap_OBJECTS) $(reordercap_LDADD) $(LIBS)

sharkd$(EXEEXT): $(sharkd_OBJECTS) $(sharkd_DEPENDENCIES) $(EXTRA_sharkd_DEPENDENCIES) 
	@rm -f sharkd$(EXEEXT)
	$(AM_V_CCLD)$(sharkd_LINK) $(sharkd_OBJECTS) $(sharkd_LDADD) $(LIBS)

text2pcap$(EXEEXT): $(text2pcap_OBJECTS) $(text2pcap_DEPENDENCIES) $(EXTRA_text2pcap_DEPENDENCIES) 
	@rm -f text2pcap$(EXEEXT)
	$(AM_V_CCLD)$(text2pcap_LINK) $(text2pcap_OBJECTS) $(text2pcap_LDADD) $(LIBS)

tfshark$(EXEEXT): $(tfshark_OBJECTS) $(tfshark_DEPENDENCIES) $(EXTRA_tfshark_DEPENDENCIES) 
	@rm -f tfshark$(EXEEXT)
	$(AM_V_CCLD)$(tfshark_LINK) $(tfshark_OBJECTS) $(tfshark_LDADD) $(LIBS)

tshark$(EXEEXT): $(tshark_OBJECTS) $(tshark_DEPENDENCIES) $(EXTRA_tshark_DEPENDENCIES) 
	@rm -f tshark$(EXEEXT)
	$(AM_V_CCLD)$(tshark_LINK) $(tshark_OBJECTS) $(tshark_LDADD) $(LIBS)

wireshark$(EXEEXT): $(wireshark_OBJECTS) $(wireshark_DEPENDENCIES) $(EXTRA_wireshark_DEPENDENCIES) 
	@rm -f wireshark$(EXEEXT)
	$(AM_V_CXXLD)$(wireshark_LINK) $(wireshark_OBJECTS) $(wireshark_LDADD) $(LIBS)

wireshark-gtk$(EXEEXT): $(wireshark_gtk_OBJECTS) $(wireshark_gtk_DEPENDENCIES) $(EXTRA_wireshark_gtk_DEPENDENCIES) 
	@rm -f wireshark-gtk$(EXEEXT)
	$(AM_V_CCLD)$(wireshark_gtk_LINK) $(wireshark_gtk_OBJECTS) $(wireshark_gtk_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f tools/oss-fuzzshark/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/capinfos-capinfos.Po
#include ./$(DEPDIR)/capinfos-version_info.Po
#include ./$(DEPDIR)/captype-captype.Po
#include ./$(DEPDIR)/captype-version_info.Po
#include ./$(DEPDIR)/dftest-dftest.Po
#include ./$(DEPDIR)/dumpcap-capture_opts.Po
#include ./$(DEPDIR)/dumpcap-capture_stop_conditions.Po
#include ./$(DEPDIR)/dumpcap-conditions.Po
#include ./$(DEPDIR)/dumpcap-dumpcap.Po
#include ./$(DEPDIR)/dumpcap-ringbuffer.Po
#include ./$(DEPDIR)/dumpcap-sync_pipe_write.Po
#include ./$(DEPDIR)/dumpcap-version_info.Po
#include ./$(DEPDIR)/editcap-editcap.Po
#include ./$(DEPDIR)/editcap-version_info.Po
#include ./$(DEPDIR)/fuzzshark-version_info.Po
#include ./$(DEPDIR)/mergecap-mergecap.Po
#include ./$(DEPDIR)/mergecap-version_info.Po
#include ./$(DEPDIR)/mmdbresolve-mmdbresolve.Po
#include ./$(DEPDIR)/randpkt-randpkt.Po
#include ./$(DEPDIR)/randpkt-version_info.Po
#include ./$(DEPDIR)/rawshark-cfile.Po
#include ./$(DEPDIR)/rawshark-extcap.Po
#include ./$(DEPDIR)/rawshark-extcap_parser.Po
#include ./$(DEPDIR)/rawshark-file_packet_provider.Po
#include ./$(DEPDIR)/rawshark-frame_tvbuff.Po
#include ./$(DEPDIR)/rawshark-rawshark.Po
#include ./$(DEPDIR)/rawshark-sync_pipe_write.Po
#include ./$(DEPDIR)/rawshark-version_info.Po
#include ./$(DEPDIR)/reordercap-reordercap.Po
#include ./$(DEPDIR)/reordercap-version_info.Po
#include ./$(DEPDIR)/sharkd-cfile.Po
#include ./$(DEPDIR)/sharkd-extcap.Po
#include ./$(DEPDIR)/sharkd-extcap_parser.Po
#include ./$(DEPDIR)/sharkd-file_packet_provider.Po
#include ./$(DEPDIR)/sharkd-frame_tvbuff.Po
#include ./$(DEPDIR)/sharkd-sharkd.Po
#include ./$(DEPDIR)/sharkd-sharkd_daemon.Po
#include ./$(DEPDIR)/sharkd-sharkd_session.Po
#include ./$(DEPDIR)/sharkd-sync_pipe_write.Po
#include ./$(DEPDIR)/sharkd-version_info.Po
#include ./$(DEPDIR)/text2pcap-text2pcap-scanner.Po
#include ./$(DEPDIR)/text2pcap-text2pcap.Po
#include ./$(DEPDIR)/text2pcap-version_info.Po
#include ./$(DEPDIR)/tfshark-cfile.Po
#include ./$(DEPDIR)/tfshark-extcap.Po
#include ./$(DEPDIR)/tfshark-extcap_parser.Po
#include ./$(DEPDIR)/tfshark-file_packet_provider.Po
#include ./$(DEPDIR)/tfshark-frame_tvbuff.Po
#include ./$(DEPDIR)/tfshark-sync_pipe_write.Po
#include ./$(DEPDIR)/tfshark-tfshark.Po
#include ./$(DEPDIR)/tfshark-version_info.Po
#include ./$(DEPDIR)/tshark-capture_opts.Po
#include ./$(DEPDIR)/tshark-cfile.Po
#include ./$(DEPDIR)/tshark-extcap.Po
#include ./$(DEPDIR)/tshark-extcap_parser.Po
#include ./$(DEPDIR)/tshark-file_packet_provider.Po
#include ./$(DEPDIR)/tshark-frame_tvbuff.Po
#include ./$(DEPDIR)/tshark-sync_pipe_write.Po
#include ./$(DEPDIR)/tshark-tshark.Po
#include ./$(DEPDIR)/tshark-version_info.Po
#include ./$(DEPDIR)/wireshark-capture_info.Po
#include ./$(DEPDIR)/wireshark-capture_opts.Po
#include ./$(DEPDIR)/wireshark-cfile.Po
#include ./$(DEPDIR)/wireshark-extcap.Po
#include ./$(DEPDIR)/wireshark-extcap_parser.Po
#include ./$(DEPDIR)/wireshark-file.Po
#include ./$(DEPDIR)/wireshark-file_packet_provider.Po
#include ./$(DEPDIR)/wireshark-fileset.Po
#include ./$(DEPDIR)/wireshark-frame_tvbuff.Po
#include ./$(DEPDIR)/wireshark-sync_pipe_write.Po
#include ./$(DEPDIR)/wireshark-version_info.Po
#include ./$(DEPDIR)/wireshark-wireshark-qt.Po
#include ./$(DEPDIR)/wireshark_gtk-capture_info.Po
#include ./$(DEPDIR)/wireshark_gtk-capture_opts.Po
#include ./$(DEPDIR)/wireshark_gtk-cfile.Po
#include ./$(DEPDIR)/wireshark_gtk-extcap.Po
#include ./$(DEPDIR)/wireshark_gtk-extcap_parser.Po
#include ./$(DEPDIR)/wireshark_gtk-file.Po
#include ./$(DEPDIR)/wireshark_gtk-file_packet_provider.Po
#include ./$(DEPDIR)/wireshark_gtk-fileset.Po
#include ./$(DEPDIR)/wireshark_gtk-frame_tvbuff.Po
#include ./$(DEPDIR)/wireshark_gtk-sync_pipe_write.Po
#include ./$(DEPDIR)/wireshark_gtk-version_info.Po
#include tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-StandaloneFuzzTargetMain.Po
#include tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-fuzzshark.Po

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

capinfos-capinfos.o: capinfos.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT capinfos-capinfos.o -MD -MP -MF $(DEPDIR)/capinfos-capinfos.Tpo -c -o capinfos-capinfos.o `test -f 'capinfos.c' || echo '$(srcdir)/'`capinfos.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/capinfos-capinfos.Tpo $(DEPDIR)/capinfos-capinfos.Po
#	$(AM_V_CC)source='capinfos.c' object='capinfos-capinfos.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o capinfos-capinfos.o `test -f 'capinfos.c' || echo '$(srcdir)/'`capinfos.c

capinfos-capinfos.obj: capinfos.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT capinfos-capinfos.obj -MD -MP -MF $(DEPDIR)/capinfos-capinfos.Tpo -c -o capinfos-capinfos.obj `if test -f 'capinfos.c'; then $(CYGPATH_W) 'capinfos.c'; else $(CYGPATH_W) '$(srcdir)/capinfos.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/capinfos-capinfos.Tpo $(DEPDIR)/capinfos-capinfos.Po
#	$(AM_V_CC)source='capinfos.c' object='capinfos-capinfos.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o capinfos-capinfos.obj `if test -f 'capinfos.c'; then $(CYGPATH_W) 'capinfos.c'; else $(CYGPATH_W) '$(srcdir)/capinfos.c'; fi`

capinfos-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT capinfos-version_info.o -MD -MP -MF $(DEPDIR)/capinfos-version_info.Tpo -c -o capinfos-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/capinfos-version_info.Tpo $(DEPDIR)/capinfos-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='capinfos-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o capinfos-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

capinfos-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT capinfos-version_info.obj -MD -MP -MF $(DEPDIR)/capinfos-version_info.Tpo -c -o capinfos-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/capinfos-version_info.Tpo $(DEPDIR)/capinfos-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='capinfos-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(capinfos_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o capinfos-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

captype-captype.o: captype.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT captype-captype.o -MD -MP -MF $(DEPDIR)/captype-captype.Tpo -c -o captype-captype.o `test -f 'captype.c' || echo '$(srcdir)/'`captype.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/captype-captype.Tpo $(DEPDIR)/captype-captype.Po
#	$(AM_V_CC)source='captype.c' object='captype-captype.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o captype-captype.o `test -f 'captype.c' || echo '$(srcdir)/'`captype.c

captype-captype.obj: captype.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT captype-captype.obj -MD -MP -MF $(DEPDIR)/captype-captype.Tpo -c -o captype-captype.obj `if test -f 'captype.c'; then $(CYGPATH_W) 'captype.c'; else $(CYGPATH_W) '$(srcdir)/captype.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/captype-captype.Tpo $(DEPDIR)/captype-captype.Po
#	$(AM_V_CC)source='captype.c' object='captype-captype.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o captype-captype.obj `if test -f 'captype.c'; then $(CYGPATH_W) 'captype.c'; else $(CYGPATH_W) '$(srcdir)/captype.c'; fi`

captype-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT captype-version_info.o -MD -MP -MF $(DEPDIR)/captype-version_info.Tpo -c -o captype-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/captype-version_info.Tpo $(DEPDIR)/captype-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='captype-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o captype-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

captype-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT captype-version_info.obj -MD -MP -MF $(DEPDIR)/captype-version_info.Tpo -c -o captype-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/captype-version_info.Tpo $(DEPDIR)/captype-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='captype-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(captype_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o captype-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

dftest-dftest.o: dftest.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dftest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dftest-dftest.o -MD -MP -MF $(DEPDIR)/dftest-dftest.Tpo -c -o dftest-dftest.o `test -f 'dftest.c' || echo '$(srcdir)/'`dftest.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dftest-dftest.Tpo $(DEPDIR)/dftest-dftest.Po
#	$(AM_V_CC)source='dftest.c' object='dftest-dftest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dftest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dftest-dftest.o `test -f 'dftest.c' || echo '$(srcdir)/'`dftest.c

dftest-dftest.obj: dftest.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dftest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dftest-dftest.obj -MD -MP -MF $(DEPDIR)/dftest-dftest.Tpo -c -o dftest-dftest.obj `if test -f 'dftest.c'; then $(CYGPATH_W) 'dftest.c'; else $(CYGPATH_W) '$(srcdir)/dftest.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dftest-dftest.Tpo $(DEPDIR)/dftest-dftest.Po
#	$(AM_V_CC)source='dftest.c' object='dftest-dftest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dftest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dftest-dftest.obj `if test -f 'dftest.c'; then $(CYGPATH_W) 'dftest.c'; else $(CYGPATH_W) '$(srcdir)/dftest.c'; fi`

dumpcap-capture_opts.o: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-capture_opts.o -MD -MP -MF $(DEPDIR)/dumpcap-capture_opts.Tpo -c -o dumpcap-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-capture_opts.Tpo $(DEPDIR)/dumpcap-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='dumpcap-capture_opts.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c

dumpcap-capture_opts.obj: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-capture_opts.obj -MD -MP -MF $(DEPDIR)/dumpcap-capture_opts.Tpo -c -o dumpcap-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-capture_opts.Tpo $(DEPDIR)/dumpcap-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='dumpcap-capture_opts.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`

dumpcap-capture_stop_conditions.o: capture_stop_conditions.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-capture_stop_conditions.o -MD -MP -MF $(DEPDIR)/dumpcap-capture_stop_conditions.Tpo -c -o dumpcap-capture_stop_conditions.o `test -f 'capture_stop_conditions.c' || echo '$(srcdir)/'`capture_stop_conditions.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-capture_stop_conditions.Tpo $(DEPDIR)/dumpcap-capture_stop_conditions.Po
#	$(AM_V_CC)source='capture_stop_conditions.c' object='dumpcap-capture_stop_conditions.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-capture_stop_conditions.o `test -f 'capture_stop_conditions.c' || echo '$(srcdir)/'`capture_stop_conditions.c

dumpcap-capture_stop_conditions.obj: capture_stop_conditions.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-capture_stop_conditions.obj -MD -MP -MF $(DEPDIR)/dumpcap-capture_stop_conditions.Tpo -c -o dumpcap-capture_stop_conditions.obj `if test -f 'capture_stop_conditions.c'; then $(CYGPATH_W) 'capture_stop_conditions.c'; else $(CYGPATH_W) '$(srcdir)/capture_stop_conditions.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-capture_stop_conditions.Tpo $(DEPDIR)/dumpcap-capture_stop_conditions.Po
#	$(AM_V_CC)source='capture_stop_conditions.c' object='dumpcap-capture_stop_conditions.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-capture_stop_conditions.obj `if test -f 'capture_stop_conditions.c'; then $(CYGPATH_W) 'capture_stop_conditions.c'; else $(CYGPATH_W) '$(srcdir)/capture_stop_conditions.c'; fi`

dumpcap-conditions.o: conditions.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-conditions.o -MD -MP -MF $(DEPDIR)/dumpcap-conditions.Tpo -c -o dumpcap-conditions.o `test -f 'conditions.c' || echo '$(srcdir)/'`conditions.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-conditions.Tpo $(DEPDIR)/dumpcap-conditions.Po
#	$(AM_V_CC)source='conditions.c' object='dumpcap-conditions.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-conditions.o `test -f 'conditions.c' || echo '$(srcdir)/'`conditions.c

dumpcap-conditions.obj: conditions.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-conditions.obj -MD -MP -MF $(DEPDIR)/dumpcap-conditions.Tpo -c -o dumpcap-conditions.obj `if test -f 'conditions.c'; then $(CYGPATH_W) 'conditions.c'; else $(CYGPATH_W) '$(srcdir)/conditions.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-conditions.Tpo $(DEPDIR)/dumpcap-conditions.Po
#	$(AM_V_CC)source='conditions.c' object='dumpcap-conditions.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-conditions.obj `if test -f 'conditions.c'; then $(CYGPATH_W) 'conditions.c'; else $(CYGPATH_W) '$(srcdir)/conditions.c'; fi`

dumpcap-dumpcap.o: dumpcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-dumpcap.o -MD -MP -MF $(DEPDIR)/dumpcap-dumpcap.Tpo -c -o dumpcap-dumpcap.o `test -f 'dumpcap.c' || echo '$(srcdir)/'`dumpcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-dumpcap.Tpo $(DEPDIR)/dumpcap-dumpcap.Po
#	$(AM_V_CC)source='dumpcap.c' object='dumpcap-dumpcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-dumpcap.o `test -f 'dumpcap.c' || echo '$(srcdir)/'`dumpcap.c

dumpcap-dumpcap.obj: dumpcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-dumpcap.obj -MD -MP -MF $(DEPDIR)/dumpcap-dumpcap.Tpo -c -o dumpcap-dumpcap.obj `if test -f 'dumpcap.c'; then $(CYGPATH_W) 'dumpcap.c'; else $(CYGPATH_W) '$(srcdir)/dumpcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-dumpcap.Tpo $(DEPDIR)/dumpcap-dumpcap.Po
#	$(AM_V_CC)source='dumpcap.c' object='dumpcap-dumpcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-dumpcap.obj `if test -f 'dumpcap.c'; then $(CYGPATH_W) 'dumpcap.c'; else $(CYGPATH_W) '$(srcdir)/dumpcap.c'; fi`

dumpcap-ringbuffer.o: ringbuffer.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-ringbuffer.o -MD -MP -MF $(DEPDIR)/dumpcap-ringbuffer.Tpo -c -o dumpcap-ringbuffer.o `test -f 'ringbuffer.c' || echo '$(srcdir)/'`ringbuffer.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-ringbuffer.Tpo $(DEPDIR)/dumpcap-ringbuffer.Po
#	$(AM_V_CC)source='ringbuffer.c' object='dumpcap-ringbuffer.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-ringbuffer.o `test -f 'ringbuffer.c' || echo '$(srcdir)/'`ringbuffer.c

dumpcap-ringbuffer.obj: ringbuffer.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-ringbuffer.obj -MD -MP -MF $(DEPDIR)/dumpcap-ringbuffer.Tpo -c -o dumpcap-ringbuffer.obj `if test -f 'ringbuffer.c'; then $(CYGPATH_W) 'ringbuffer.c'; else $(CYGPATH_W) '$(srcdir)/ringbuffer.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-ringbuffer.Tpo $(DEPDIR)/dumpcap-ringbuffer.Po
#	$(AM_V_CC)source='ringbuffer.c' object='dumpcap-ringbuffer.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-ringbuffer.obj `if test -f 'ringbuffer.c'; then $(CYGPATH_W) 'ringbuffer.c'; else $(CYGPATH_W) '$(srcdir)/ringbuffer.c'; fi`

dumpcap-sync_pipe_write.o: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-sync_pipe_write.o -MD -MP -MF $(DEPDIR)/dumpcap-sync_pipe_write.Tpo -c -o dumpcap-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-sync_pipe_write.Tpo $(DEPDIR)/dumpcap-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='dumpcap-sync_pipe_write.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c

dumpcap-sync_pipe_write.obj: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-sync_pipe_write.obj -MD -MP -MF $(DEPDIR)/dumpcap-sync_pipe_write.Tpo -c -o dumpcap-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-sync_pipe_write.Tpo $(DEPDIR)/dumpcap-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='dumpcap-sync_pipe_write.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`

dumpcap-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-version_info.o -MD -MP -MF $(DEPDIR)/dumpcap-version_info.Tpo -c -o dumpcap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-version_info.Tpo $(DEPDIR)/dumpcap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='dumpcap-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

dumpcap-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -MT dumpcap-version_info.obj -MD -MP -MF $(DEPDIR)/dumpcap-version_info.Tpo -c -o dumpcap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dumpcap-version_info.Tpo $(DEPDIR)/dumpcap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='dumpcap-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpcap_CPPFLAGS) $(CPPFLAGS) $(dumpcap_CFLAGS) $(CFLAGS) -c -o dumpcap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

editcap-editcap.o: editcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT editcap-editcap.o -MD -MP -MF $(DEPDIR)/editcap-editcap.Tpo -c -o editcap-editcap.o `test -f 'editcap.c' || echo '$(srcdir)/'`editcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/editcap-editcap.Tpo $(DEPDIR)/editcap-editcap.Po
#	$(AM_V_CC)source='editcap.c' object='editcap-editcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o editcap-editcap.o `test -f 'editcap.c' || echo '$(srcdir)/'`editcap.c

editcap-editcap.obj: editcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT editcap-editcap.obj -MD -MP -MF $(DEPDIR)/editcap-editcap.Tpo -c -o editcap-editcap.obj `if test -f 'editcap.c'; then $(CYGPATH_W) 'editcap.c'; else $(CYGPATH_W) '$(srcdir)/editcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/editcap-editcap.Tpo $(DEPDIR)/editcap-editcap.Po
#	$(AM_V_CC)source='editcap.c' object='editcap-editcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o editcap-editcap.obj `if test -f 'editcap.c'; then $(CYGPATH_W) 'editcap.c'; else $(CYGPATH_W) '$(srcdir)/editcap.c'; fi`

editcap-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT editcap-version_info.o -MD -MP -MF $(DEPDIR)/editcap-version_info.Tpo -c -o editcap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/editcap-version_info.Tpo $(DEPDIR)/editcap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='editcap-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o editcap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

editcap-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT editcap-version_info.obj -MD -MP -MF $(DEPDIR)/editcap-version_info.Tpo -c -o editcap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/editcap-version_info.Tpo $(DEPDIR)/editcap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='editcap-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(editcap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o editcap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

tools/oss-fuzzshark/fuzzshark-fuzzshark.o: tools/oss-fuzzshark/fuzzshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/oss-fuzzshark/fuzzshark-fuzzshark.o -MD -MP -MF tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-fuzzshark.Tpo -c -o tools/oss-fuzzshark/fuzzshark-fuzzshark.o `test -f 'tools/oss-fuzzshark/fuzzshark.c' || echo '$(srcdir)/'`tools/oss-fuzzshark/fuzzshark.c
#	$(AM_V_at)$(am__mv) tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-fuzzshark.Tpo tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-fuzzshark.Po
#	$(AM_V_CC)source='tools/oss-fuzzshark/fuzzshark.c' object='tools/oss-fuzzshark/fuzzshark-fuzzshark.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/oss-fuzzshark/fuzzshark-fuzzshark.o `test -f 'tools/oss-fuzzshark/fuzzshark.c' || echo '$(srcdir)/'`tools/oss-fuzzshark/fuzzshark.c

tools/oss-fuzzshark/fuzzshark-fuzzshark.obj: tools/oss-fuzzshark/fuzzshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/oss-fuzzshark/fuzzshark-fuzzshark.obj -MD -MP -MF tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-fuzzshark.Tpo -c -o tools/oss-fuzzshark/fuzzshark-fuzzshark.obj `if test -f 'tools/oss-fuzzshark/fuzzshark.c'; then $(CYGPATH_W) 'tools/oss-fuzzshark/fuzzshark.c'; else $(CYGPATH_W) '$(srcdir)/tools/oss-fuzzshark/fuzzshark.c'; fi`
#	$(AM_V_at)$(am__mv) tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-fuzzshark.Tpo tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-fuzzshark.Po
#	$(AM_V_CC)source='tools/oss-fuzzshark/fuzzshark.c' object='tools/oss-fuzzshark/fuzzshark-fuzzshark.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/oss-fuzzshark/fuzzshark-fuzzshark.obj `if test -f 'tools/oss-fuzzshark/fuzzshark.c'; then $(CYGPATH_W) 'tools/oss-fuzzshark/fuzzshark.c'; else $(CYGPATH_W) '$(srcdir)/tools/oss-fuzzshark/fuzzshark.c'; fi`

tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.o: tools/oss-fuzzshark/StandaloneFuzzTargetMain.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.o -MD -MP -MF tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-StandaloneFuzzTargetMain.Tpo -c -o tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.o `test -f 'tools/oss-fuzzshark/StandaloneFuzzTargetMain.c' || echo '$(srcdir)/'`tools/oss-fuzzshark/StandaloneFuzzTargetMain.c
#	$(AM_V_at)$(am__mv) tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-StandaloneFuzzTargetMain.Tpo tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-StandaloneFuzzTargetMain.Po
#	$(AM_V_CC)source='tools/oss-fuzzshark/StandaloneFuzzTargetMain.c' object='tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.o `test -f 'tools/oss-fuzzshark/StandaloneFuzzTargetMain.c' || echo '$(srcdir)/'`tools/oss-fuzzshark/StandaloneFuzzTargetMain.c

tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.obj: tools/oss-fuzzshark/StandaloneFuzzTargetMain.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.obj -MD -MP -MF tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-StandaloneFuzzTargetMain.Tpo -c -o tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.obj `if test -f 'tools/oss-fuzzshark/StandaloneFuzzTargetMain.c'; then $(CYGPATH_W) 'tools/oss-fuzzshark/StandaloneFuzzTargetMain.c'; else $(CYGPATH_W) '$(srcdir)/tools/oss-fuzzshark/StandaloneFuzzTargetMain.c'; fi`
#	$(AM_V_at)$(am__mv) tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-StandaloneFuzzTargetMain.Tpo tools/oss-fuzzshark/$(DEPDIR)/fuzzshark-StandaloneFuzzTargetMain.Po
#	$(AM_V_CC)source='tools/oss-fuzzshark/StandaloneFuzzTargetMain.c' object='tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/oss-fuzzshark/fuzzshark-StandaloneFuzzTargetMain.obj `if test -f 'tools/oss-fuzzshark/StandaloneFuzzTargetMain.c'; then $(CYGPATH_W) 'tools/oss-fuzzshark/StandaloneFuzzTargetMain.c'; else $(CYGPATH_W) '$(srcdir)/tools/oss-fuzzshark/StandaloneFuzzTargetMain.c'; fi`

fuzzshark-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fuzzshark-version_info.o -MD -MP -MF $(DEPDIR)/fuzzshark-version_info.Tpo -c -o fuzzshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/fuzzshark-version_info.Tpo $(DEPDIR)/fuzzshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='fuzzshark-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fuzzshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

fuzzshark-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fuzzshark-version_info.obj -MD -MP -MF $(DEPDIR)/fuzzshark-version_info.Tpo -c -o fuzzshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/fuzzshark-version_info.Tpo $(DEPDIR)/fuzzshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='fuzzshark-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fuzzshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fuzzshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

mergecap-mergecap.o: mergecap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mergecap-mergecap.o -MD -MP -MF $(DEPDIR)/mergecap-mergecap.Tpo -c -o mergecap-mergecap.o `test -f 'mergecap.c' || echo '$(srcdir)/'`mergecap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mergecap-mergecap.Tpo $(DEPDIR)/mergecap-mergecap.Po
#	$(AM_V_CC)source='mergecap.c' object='mergecap-mergecap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mergecap-mergecap.o `test -f 'mergecap.c' || echo '$(srcdir)/'`mergecap.c

mergecap-mergecap.obj: mergecap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mergecap-mergecap.obj -MD -MP -MF $(DEPDIR)/mergecap-mergecap.Tpo -c -o mergecap-mergecap.obj `if test -f 'mergecap.c'; then $(CYGPATH_W) 'mergecap.c'; else $(CYGPATH_W) '$(srcdir)/mergecap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mergecap-mergecap.Tpo $(DEPDIR)/mergecap-mergecap.Po
#	$(AM_V_CC)source='mergecap.c' object='mergecap-mergecap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mergecap-mergecap.obj `if test -f 'mergecap.c'; then $(CYGPATH_W) 'mergecap.c'; else $(CYGPATH_W) '$(srcdir)/mergecap.c'; fi`

mergecap-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mergecap-version_info.o -MD -MP -MF $(DEPDIR)/mergecap-version_info.Tpo -c -o mergecap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mergecap-version_info.Tpo $(DEPDIR)/mergecap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='mergecap-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mergecap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

mergecap-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mergecap-version_info.obj -MD -MP -MF $(DEPDIR)/mergecap-version_info.Tpo -c -o mergecap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mergecap-version_info.Tpo $(DEPDIR)/mergecap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='mergecap-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mergecap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mergecap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

mmdbresolve-mmdbresolve.o: mmdbresolve.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mmdbresolve_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmdbresolve-mmdbresolve.o -MD -MP -MF $(DEPDIR)/mmdbresolve-mmdbresolve.Tpo -c -o mmdbresolve-mmdbresolve.o `test -f 'mmdbresolve.c' || echo '$(srcdir)/'`mmdbresolve.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mmdbresolve-mmdbresolve.Tpo $(DEPDIR)/mmdbresolve-mmdbresolve.Po
#	$(AM_V_CC)source='mmdbresolve.c' object='mmdbresolve-mmdbresolve.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mmdbresolve_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmdbresolve-mmdbresolve.o `test -f 'mmdbresolve.c' || echo '$(srcdir)/'`mmdbresolve.c

mmdbresolve-mmdbresolve.obj: mmdbresolve.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mmdbresolve_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmdbresolve-mmdbresolve.obj -MD -MP -MF $(DEPDIR)/mmdbresolve-mmdbresolve.Tpo -c -o mmdbresolve-mmdbresolve.obj `if test -f 'mmdbresolve.c'; then $(CYGPATH_W) 'mmdbresolve.c'; else $(CYGPATH_W) '$(srcdir)/mmdbresolve.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mmdbresolve-mmdbresolve.Tpo $(DEPDIR)/mmdbresolve-mmdbresolve.Po
#	$(AM_V_CC)source='mmdbresolve.c' object='mmdbresolve-mmdbresolve.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mmdbresolve_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmdbresolve-mmdbresolve.obj `if test -f 'mmdbresolve.c'; then $(CYGPATH_W) 'mmdbresolve.c'; else $(CYGPATH_W) '$(srcdir)/mmdbresolve.c'; fi`

randpkt-randpkt.o: randpkt.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randpkt-randpkt.o -MD -MP -MF $(DEPDIR)/randpkt-randpkt.Tpo -c -o randpkt-randpkt.o `test -f 'randpkt.c' || echo '$(srcdir)/'`randpkt.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/randpkt-randpkt.Tpo $(DEPDIR)/randpkt-randpkt.Po
#	$(AM_V_CC)source='randpkt.c' object='randpkt-randpkt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randpkt-randpkt.o `test -f 'randpkt.c' || echo '$(srcdir)/'`randpkt.c

randpkt-randpkt.obj: randpkt.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randpkt-randpkt.obj -MD -MP -MF $(DEPDIR)/randpkt-randpkt.Tpo -c -o randpkt-randpkt.obj `if test -f 'randpkt.c'; then $(CYGPATH_W) 'randpkt.c'; else $(CYGPATH_W) '$(srcdir)/randpkt.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/randpkt-randpkt.Tpo $(DEPDIR)/randpkt-randpkt.Po
#	$(AM_V_CC)source='randpkt.c' object='randpkt-randpkt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randpkt-randpkt.obj `if test -f 'randpkt.c'; then $(CYGPATH_W) 'randpkt.c'; else $(CYGPATH_W) '$(srcdir)/randpkt.c'; fi`

randpkt-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randpkt-version_info.o -MD -MP -MF $(DEPDIR)/randpkt-version_info.Tpo -c -o randpkt-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/randpkt-version_info.Tpo $(DEPDIR)/randpkt-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='randpkt-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randpkt-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

randpkt-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randpkt-version_info.obj -MD -MP -MF $(DEPDIR)/randpkt-version_info.Tpo -c -o randpkt-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/randpkt-version_info.Tpo $(DEPDIR)/randpkt-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='randpkt-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(randpkt_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randpkt-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

rawshark-cfile.o: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-cfile.o -MD -MP -MF $(DEPDIR)/rawshark-cfile.Tpo -c -o rawshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-cfile.Tpo $(DEPDIR)/rawshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='rawshark-cfile.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c

rawshark-cfile.obj: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-cfile.obj -MD -MP -MF $(DEPDIR)/rawshark-cfile.Tpo -c -o rawshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-cfile.Tpo $(DEPDIR)/rawshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='rawshark-cfile.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`

rawshark-file_packet_provider.o: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-file_packet_provider.o -MD -MP -MF $(DEPDIR)/rawshark-file_packet_provider.Tpo -c -o rawshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-file_packet_provider.Tpo $(DEPDIR)/rawshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='rawshark-file_packet_provider.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c

rawshark-file_packet_provider.obj: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-file_packet_provider.obj -MD -MP -MF $(DEPDIR)/rawshark-file_packet_provider.Tpo -c -o rawshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-file_packet_provider.Tpo $(DEPDIR)/rawshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='rawshark-file_packet_provider.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`

rawshark-frame_tvbuff.o: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-frame_tvbuff.o -MD -MP -MF $(DEPDIR)/rawshark-frame_tvbuff.Tpo -c -o rawshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-frame_tvbuff.Tpo $(DEPDIR)/rawshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='rawshark-frame_tvbuff.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c

rawshark-frame_tvbuff.obj: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-frame_tvbuff.obj -MD -MP -MF $(DEPDIR)/rawshark-frame_tvbuff.Tpo -c -o rawshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-frame_tvbuff.Tpo $(DEPDIR)/rawshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='rawshark-frame_tvbuff.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`

rawshark-sync_pipe_write.o: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-sync_pipe_write.o -MD -MP -MF $(DEPDIR)/rawshark-sync_pipe_write.Tpo -c -o rawshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-sync_pipe_write.Tpo $(DEPDIR)/rawshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='rawshark-sync_pipe_write.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c

rawshark-sync_pipe_write.obj: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-sync_pipe_write.obj -MD -MP -MF $(DEPDIR)/rawshark-sync_pipe_write.Tpo -c -o rawshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-sync_pipe_write.Tpo $(DEPDIR)/rawshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='rawshark-sync_pipe_write.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`

rawshark-extcap.o: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-extcap.o -MD -MP -MF $(DEPDIR)/rawshark-extcap.Tpo -c -o rawshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-extcap.Tpo $(DEPDIR)/rawshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='rawshark-extcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c

rawshark-extcap.obj: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-extcap.obj -MD -MP -MF $(DEPDIR)/rawshark-extcap.Tpo -c -o rawshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-extcap.Tpo $(DEPDIR)/rawshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='rawshark-extcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`

rawshark-extcap_parser.o: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-extcap_parser.o -MD -MP -MF $(DEPDIR)/rawshark-extcap_parser.Tpo -c -o rawshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-extcap_parser.Tpo $(DEPDIR)/rawshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='rawshark-extcap_parser.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c

rawshark-extcap_parser.obj: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-extcap_parser.obj -MD -MP -MF $(DEPDIR)/rawshark-extcap_parser.Tpo -c -o rawshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-extcap_parser.Tpo $(DEPDIR)/rawshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='rawshark-extcap_parser.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`

rawshark-rawshark.o: rawshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-rawshark.o -MD -MP -MF $(DEPDIR)/rawshark-rawshark.Tpo -c -o rawshark-rawshark.o `test -f 'rawshark.c' || echo '$(srcdir)/'`rawshark.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-rawshark.Tpo $(DEPDIR)/rawshark-rawshark.Po
#	$(AM_V_CC)source='rawshark.c' object='rawshark-rawshark.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-rawshark.o `test -f 'rawshark.c' || echo '$(srcdir)/'`rawshark.c

rawshark-rawshark.obj: rawshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-rawshark.obj -MD -MP -MF $(DEPDIR)/rawshark-rawshark.Tpo -c -o rawshark-rawshark.obj `if test -f 'rawshark.c'; then $(CYGPATH_W) 'rawshark.c'; else $(CYGPATH_W) '$(srcdir)/rawshark.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-rawshark.Tpo $(DEPDIR)/rawshark-rawshark.Po
#	$(AM_V_CC)source='rawshark.c' object='rawshark-rawshark.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-rawshark.obj `if test -f 'rawshark.c'; then $(CYGPATH_W) 'rawshark.c'; else $(CYGPATH_W) '$(srcdir)/rawshark.c'; fi`

rawshark-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-version_info.o -MD -MP -MF $(DEPDIR)/rawshark-version_info.Tpo -c -o rawshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-version_info.Tpo $(DEPDIR)/rawshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='rawshark-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

rawshark-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawshark-version_info.obj -MD -MP -MF $(DEPDIR)/rawshark-version_info.Tpo -c -o rawshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/rawshark-version_info.Tpo $(DEPDIR)/rawshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='rawshark-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rawshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

reordercap-reordercap.o: reordercap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reordercap-reordercap.o -MD -MP -MF $(DEPDIR)/reordercap-reordercap.Tpo -c -o reordercap-reordercap.o `test -f 'reordercap.c' || echo '$(srcdir)/'`reordercap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/reordercap-reordercap.Tpo $(DEPDIR)/reordercap-reordercap.Po
#	$(AM_V_CC)source='reordercap.c' object='reordercap-reordercap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reordercap-reordercap.o `test -f 'reordercap.c' || echo '$(srcdir)/'`reordercap.c

reordercap-reordercap.obj: reordercap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reordercap-reordercap.obj -MD -MP -MF $(DEPDIR)/reordercap-reordercap.Tpo -c -o reordercap-reordercap.obj `if test -f 'reordercap.c'; then $(CYGPATH_W) 'reordercap.c'; else $(CYGPATH_W) '$(srcdir)/reordercap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/reordercap-reordercap.Tpo $(DEPDIR)/reordercap-reordercap.Po
#	$(AM_V_CC)source='reordercap.c' object='reordercap-reordercap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reordercap-reordercap.obj `if test -f 'reordercap.c'; then $(CYGPATH_W) 'reordercap.c'; else $(CYGPATH_W) '$(srcdir)/reordercap.c'; fi`

reordercap-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reordercap-version_info.o -MD -MP -MF $(DEPDIR)/reordercap-version_info.Tpo -c -o reordercap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/reordercap-version_info.Tpo $(DEPDIR)/reordercap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='reordercap-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reordercap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

reordercap-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reordercap-version_info.obj -MD -MP -MF $(DEPDIR)/reordercap-version_info.Tpo -c -o reordercap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/reordercap-version_info.Tpo $(DEPDIR)/reordercap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='reordercap-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(reordercap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reordercap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

sharkd-cfile.o: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-cfile.o -MD -MP -MF $(DEPDIR)/sharkd-cfile.Tpo -c -o sharkd-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-cfile.Tpo $(DEPDIR)/sharkd-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='sharkd-cfile.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c

sharkd-cfile.obj: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-cfile.obj -MD -MP -MF $(DEPDIR)/sharkd-cfile.Tpo -c -o sharkd-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-cfile.Tpo $(DEPDIR)/sharkd-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='sharkd-cfile.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`

sharkd-file_packet_provider.o: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-file_packet_provider.o -MD -MP -MF $(DEPDIR)/sharkd-file_packet_provider.Tpo -c -o sharkd-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-file_packet_provider.Tpo $(DEPDIR)/sharkd-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='sharkd-file_packet_provider.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c

sharkd-file_packet_provider.obj: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-file_packet_provider.obj -MD -MP -MF $(DEPDIR)/sharkd-file_packet_provider.Tpo -c -o sharkd-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-file_packet_provider.Tpo $(DEPDIR)/sharkd-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='sharkd-file_packet_provider.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`

sharkd-frame_tvbuff.o: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-frame_tvbuff.o -MD -MP -MF $(DEPDIR)/sharkd-frame_tvbuff.Tpo -c -o sharkd-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-frame_tvbuff.Tpo $(DEPDIR)/sharkd-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='sharkd-frame_tvbuff.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c

sharkd-frame_tvbuff.obj: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-frame_tvbuff.obj -MD -MP -MF $(DEPDIR)/sharkd-frame_tvbuff.Tpo -c -o sharkd-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-frame_tvbuff.Tpo $(DEPDIR)/sharkd-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='sharkd-frame_tvbuff.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`

sharkd-sync_pipe_write.o: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sync_pipe_write.o -MD -MP -MF $(DEPDIR)/sharkd-sync_pipe_write.Tpo -c -o sharkd-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sync_pipe_write.Tpo $(DEPDIR)/sharkd-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='sharkd-sync_pipe_write.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c

sharkd-sync_pipe_write.obj: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sync_pipe_write.obj -MD -MP -MF $(DEPDIR)/sharkd-sync_pipe_write.Tpo -c -o sharkd-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sync_pipe_write.Tpo $(DEPDIR)/sharkd-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='sharkd-sync_pipe_write.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`

sharkd-extcap.o: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-extcap.o -MD -MP -MF $(DEPDIR)/sharkd-extcap.Tpo -c -o sharkd-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-extcap.Tpo $(DEPDIR)/sharkd-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='sharkd-extcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c

sharkd-extcap.obj: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-extcap.obj -MD -MP -MF $(DEPDIR)/sharkd-extcap.Tpo -c -o sharkd-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-extcap.Tpo $(DEPDIR)/sharkd-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='sharkd-extcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`

sharkd-extcap_parser.o: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-extcap_parser.o -MD -MP -MF $(DEPDIR)/sharkd-extcap_parser.Tpo -c -o sharkd-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-extcap_parser.Tpo $(DEPDIR)/sharkd-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='sharkd-extcap_parser.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c

sharkd-extcap_parser.obj: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-extcap_parser.obj -MD -MP -MF $(DEPDIR)/sharkd-extcap_parser.Tpo -c -o sharkd-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-extcap_parser.Tpo $(DEPDIR)/sharkd-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='sharkd-extcap_parser.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`

sharkd-sharkd.o: sharkd.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sharkd.o -MD -MP -MF $(DEPDIR)/sharkd-sharkd.Tpo -c -o sharkd-sharkd.o `test -f 'sharkd.c' || echo '$(srcdir)/'`sharkd.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sharkd.Tpo $(DEPDIR)/sharkd-sharkd.Po
#	$(AM_V_CC)source='sharkd.c' object='sharkd-sharkd.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sharkd.o `test -f 'sharkd.c' || echo '$(srcdir)/'`sharkd.c

sharkd-sharkd.obj: sharkd.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sharkd.obj -MD -MP -MF $(DEPDIR)/sharkd-sharkd.Tpo -c -o sharkd-sharkd.obj `if test -f 'sharkd.c'; then $(CYGPATH_W) 'sharkd.c'; else $(CYGPATH_W) '$(srcdir)/sharkd.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sharkd.Tpo $(DEPDIR)/sharkd-sharkd.Po
#	$(AM_V_CC)source='sharkd.c' object='sharkd-sharkd.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sharkd.obj `if test -f 'sharkd.c'; then $(CYGPATH_W) 'sharkd.c'; else $(CYGPATH_W) '$(srcdir)/sharkd.c'; fi`

sharkd-sharkd_daemon.o: sharkd_daemon.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sharkd_daemon.o -MD -MP -MF $(DEPDIR)/sharkd-sharkd_daemon.Tpo -c -o sharkd-sharkd_daemon.o `test -f 'sharkd_daemon.c' || echo '$(srcdir)/'`sharkd_daemon.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sharkd_daemon.Tpo $(DEPDIR)/sharkd-sharkd_daemon.Po
#	$(AM_V_CC)source='sharkd_daemon.c' object='sharkd-sharkd_daemon.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sharkd_daemon.o `test -f 'sharkd_daemon.c' || echo '$(srcdir)/'`sharkd_daemon.c

sharkd-sharkd_daemon.obj: sharkd_daemon.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sharkd_daemon.obj -MD -MP -MF $(DEPDIR)/sharkd-sharkd_daemon.Tpo -c -o sharkd-sharkd_daemon.obj `if test -f 'sharkd_daemon.c'; then $(CYGPATH_W) 'sharkd_daemon.c'; else $(CYGPATH_W) '$(srcdir)/sharkd_daemon.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sharkd_daemon.Tpo $(DEPDIR)/sharkd-sharkd_daemon.Po
#	$(AM_V_CC)source='sharkd_daemon.c' object='sharkd-sharkd_daemon.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sharkd_daemon.obj `if test -f 'sharkd_daemon.c'; then $(CYGPATH_W) 'sharkd_daemon.c'; else $(CYGPATH_W) '$(srcdir)/sharkd_daemon.c'; fi`

sharkd-sharkd_session.o: sharkd_session.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sharkd_session.o -MD -MP -MF $(DEPDIR)/sharkd-sharkd_session.Tpo -c -o sharkd-sharkd_session.o `test -f 'sharkd_session.c' || echo '$(srcdir)/'`sharkd_session.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sharkd_session.Tpo $(DEPDIR)/sharkd-sharkd_session.Po
#	$(AM_V_CC)source='sharkd_session.c' object='sharkd-sharkd_session.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sharkd_session.o `test -f 'sharkd_session.c' || echo '$(srcdir)/'`sharkd_session.c

sharkd-sharkd_session.obj: sharkd_session.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-sharkd_session.obj -MD -MP -MF $(DEPDIR)/sharkd-sharkd_session.Tpo -c -o sharkd-sharkd_session.obj `if test -f 'sharkd_session.c'; then $(CYGPATH_W) 'sharkd_session.c'; else $(CYGPATH_W) '$(srcdir)/sharkd_session.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-sharkd_session.Tpo $(DEPDIR)/sharkd-sharkd_session.Po
#	$(AM_V_CC)source='sharkd_session.c' object='sharkd-sharkd_session.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-sharkd_session.obj `if test -f 'sharkd_session.c'; then $(CYGPATH_W) 'sharkd_session.c'; else $(CYGPATH_W) '$(srcdir)/sharkd_session.c'; fi`

sharkd-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-version_info.o -MD -MP -MF $(DEPDIR)/sharkd-version_info.Tpo -c -o sharkd-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-version_info.Tpo $(DEPDIR)/sharkd-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='sharkd-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

sharkd-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sharkd-version_info.obj -MD -MP -MF $(DEPDIR)/sharkd-version_info.Tpo -c -o sharkd-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/sharkd-version_info.Tpo $(DEPDIR)/sharkd-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='sharkd-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sharkd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sharkd-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

text2pcap-text2pcap.o: text2pcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -MT text2pcap-text2pcap.o -MD -MP -MF $(DEPDIR)/text2pcap-text2pcap.Tpo -c -o text2pcap-text2pcap.o `test -f 'text2pcap.c' || echo '$(srcdir)/'`text2pcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/text2pcap-text2pcap.Tpo $(DEPDIR)/text2pcap-text2pcap.Po
#	$(AM_V_CC)source='text2pcap.c' object='text2pcap-text2pcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -c -o text2pcap-text2pcap.o `test -f 'text2pcap.c' || echo '$(srcdir)/'`text2pcap.c

text2pcap-text2pcap.obj: text2pcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -MT text2pcap-text2pcap.obj -MD -MP -MF $(DEPDIR)/text2pcap-text2pcap.Tpo -c -o text2pcap-text2pcap.obj `if test -f 'text2pcap.c'; then $(CYGPATH_W) 'text2pcap.c'; else $(CYGPATH_W) '$(srcdir)/text2pcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/text2pcap-text2pcap.Tpo $(DEPDIR)/text2pcap-text2pcap.Po
#	$(AM_V_CC)source='text2pcap.c' object='text2pcap-text2pcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -c -o text2pcap-text2pcap.obj `if test -f 'text2pcap.c'; then $(CYGPATH_W) 'text2pcap.c'; else $(CYGPATH_W) '$(srcdir)/text2pcap.c'; fi`

text2pcap-text2pcap-scanner.o: text2pcap-scanner.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -MT text2pcap-text2pcap-scanner.o -MD -MP -MF $(DEPDIR)/text2pcap-text2pcap-scanner.Tpo -c -o text2pcap-text2pcap-scanner.o `test -f 'text2pcap-scanner.c' || echo '$(srcdir)/'`text2pcap-scanner.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/text2pcap-text2pcap-scanner.Tpo $(DEPDIR)/text2pcap-text2pcap-scanner.Po
#	$(AM_V_CC)source='text2pcap-scanner.c' object='text2pcap-text2pcap-scanner.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -c -o text2pcap-text2pcap-scanner.o `test -f 'text2pcap-scanner.c' || echo '$(srcdir)/'`text2pcap-scanner.c

text2pcap-text2pcap-scanner.obj: text2pcap-scanner.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -MT text2pcap-text2pcap-scanner.obj -MD -MP -MF $(DEPDIR)/text2pcap-text2pcap-scanner.Tpo -c -o text2pcap-text2pcap-scanner.obj `if test -f 'text2pcap-scanner.c'; then $(CYGPATH_W) 'text2pcap-scanner.c'; else $(CYGPATH_W) '$(srcdir)/text2pcap-scanner.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/text2pcap-text2pcap-scanner.Tpo $(DEPDIR)/text2pcap-text2pcap-scanner.Po
#	$(AM_V_CC)source='text2pcap-scanner.c' object='text2pcap-text2pcap-scanner.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -c -o text2pcap-text2pcap-scanner.obj `if test -f 'text2pcap-scanner.c'; then $(CYGPATH_W) 'text2pcap-scanner.c'; else $(CYGPATH_W) '$(srcdir)/text2pcap-scanner.c'; fi`

text2pcap-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -MT text2pcap-version_info.o -MD -MP -MF $(DEPDIR)/text2pcap-version_info.Tpo -c -o text2pcap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/text2pcap-version_info.Tpo $(DEPDIR)/text2pcap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='text2pcap-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -c -o text2pcap-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

text2pcap-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -MT text2pcap-version_info.obj -MD -MP -MF $(DEPDIR)/text2pcap-version_info.Tpo -c -o text2pcap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/text2pcap-version_info.Tpo $(DEPDIR)/text2pcap-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='text2pcap-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(text2pcap_CPPFLAGS) $(CPPFLAGS) $(text2pcap_CFLAGS) $(CFLAGS) -c -o text2pcap-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

tfshark-cfile.o: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-cfile.o -MD -MP -MF $(DEPDIR)/tfshark-cfile.Tpo -c -o tfshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-cfile.Tpo $(DEPDIR)/tfshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='tfshark-cfile.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c

tfshark-cfile.obj: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-cfile.obj -MD -MP -MF $(DEPDIR)/tfshark-cfile.Tpo -c -o tfshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-cfile.Tpo $(DEPDIR)/tfshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='tfshark-cfile.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`

tfshark-file_packet_provider.o: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-file_packet_provider.o -MD -MP -MF $(DEPDIR)/tfshark-file_packet_provider.Tpo -c -o tfshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-file_packet_provider.Tpo $(DEPDIR)/tfshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='tfshark-file_packet_provider.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c

tfshark-file_packet_provider.obj: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-file_packet_provider.obj -MD -MP -MF $(DEPDIR)/tfshark-file_packet_provider.Tpo -c -o tfshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-file_packet_provider.Tpo $(DEPDIR)/tfshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='tfshark-file_packet_provider.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`

tfshark-frame_tvbuff.o: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-frame_tvbuff.o -MD -MP -MF $(DEPDIR)/tfshark-frame_tvbuff.Tpo -c -o tfshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-frame_tvbuff.Tpo $(DEPDIR)/tfshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='tfshark-frame_tvbuff.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c

tfshark-frame_tvbuff.obj: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-frame_tvbuff.obj -MD -MP -MF $(DEPDIR)/tfshark-frame_tvbuff.Tpo -c -o tfshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-frame_tvbuff.Tpo $(DEPDIR)/tfshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='tfshark-frame_tvbuff.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`

tfshark-sync_pipe_write.o: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-sync_pipe_write.o -MD -MP -MF $(DEPDIR)/tfshark-sync_pipe_write.Tpo -c -o tfshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-sync_pipe_write.Tpo $(DEPDIR)/tfshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='tfshark-sync_pipe_write.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c

tfshark-sync_pipe_write.obj: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-sync_pipe_write.obj -MD -MP -MF $(DEPDIR)/tfshark-sync_pipe_write.Tpo -c -o tfshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-sync_pipe_write.Tpo $(DEPDIR)/tfshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='tfshark-sync_pipe_write.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`

tfshark-extcap.o: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-extcap.o -MD -MP -MF $(DEPDIR)/tfshark-extcap.Tpo -c -o tfshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-extcap.Tpo $(DEPDIR)/tfshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='tfshark-extcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c

tfshark-extcap.obj: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-extcap.obj -MD -MP -MF $(DEPDIR)/tfshark-extcap.Tpo -c -o tfshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-extcap.Tpo $(DEPDIR)/tfshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='tfshark-extcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`

tfshark-extcap_parser.o: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-extcap_parser.o -MD -MP -MF $(DEPDIR)/tfshark-extcap_parser.Tpo -c -o tfshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-extcap_parser.Tpo $(DEPDIR)/tfshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='tfshark-extcap_parser.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c

tfshark-extcap_parser.obj: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-extcap_parser.obj -MD -MP -MF $(DEPDIR)/tfshark-extcap_parser.Tpo -c -o tfshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-extcap_parser.Tpo $(DEPDIR)/tfshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='tfshark-extcap_parser.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`

tfshark-tfshark.o: tfshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-tfshark.o -MD -MP -MF $(DEPDIR)/tfshark-tfshark.Tpo -c -o tfshark-tfshark.o `test -f 'tfshark.c' || echo '$(srcdir)/'`tfshark.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-tfshark.Tpo $(DEPDIR)/tfshark-tfshark.Po
#	$(AM_V_CC)source='tfshark.c' object='tfshark-tfshark.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-tfshark.o `test -f 'tfshark.c' || echo '$(srcdir)/'`tfshark.c

tfshark-tfshark.obj: tfshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-tfshark.obj -MD -MP -MF $(DEPDIR)/tfshark-tfshark.Tpo -c -o tfshark-tfshark.obj `if test -f 'tfshark.c'; then $(CYGPATH_W) 'tfshark.c'; else $(CYGPATH_W) '$(srcdir)/tfshark.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-tfshark.Tpo $(DEPDIR)/tfshark-tfshark.Po
#	$(AM_V_CC)source='tfshark.c' object='tfshark-tfshark.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-tfshark.obj `if test -f 'tfshark.c'; then $(CYGPATH_W) 'tfshark.c'; else $(CYGPATH_W) '$(srcdir)/tfshark.c'; fi`

tfshark-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-version_info.o -MD -MP -MF $(DEPDIR)/tfshark-version_info.Tpo -c -o tfshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-version_info.Tpo $(DEPDIR)/tfshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='tfshark-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

tfshark-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tfshark-version_info.obj -MD -MP -MF $(DEPDIR)/tfshark-version_info.Tpo -c -o tfshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tfshark-version_info.Tpo $(DEPDIR)/tfshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='tfshark-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tfshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tfshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

tshark-cfile.o: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-cfile.o -MD -MP -MF $(DEPDIR)/tshark-cfile.Tpo -c -o tshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-cfile.Tpo $(DEPDIR)/tshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='tshark-cfile.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c

tshark-cfile.obj: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-cfile.obj -MD -MP -MF $(DEPDIR)/tshark-cfile.Tpo -c -o tshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-cfile.Tpo $(DEPDIR)/tshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='tshark-cfile.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`

tshark-file_packet_provider.o: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-file_packet_provider.o -MD -MP -MF $(DEPDIR)/tshark-file_packet_provider.Tpo -c -o tshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-file_packet_provider.Tpo $(DEPDIR)/tshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='tshark-file_packet_provider.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c

tshark-file_packet_provider.obj: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-file_packet_provider.obj -MD -MP -MF $(DEPDIR)/tshark-file_packet_provider.Tpo -c -o tshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-file_packet_provider.Tpo $(DEPDIR)/tshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='tshark-file_packet_provider.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`

tshark-frame_tvbuff.o: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-frame_tvbuff.o -MD -MP -MF $(DEPDIR)/tshark-frame_tvbuff.Tpo -c -o tshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-frame_tvbuff.Tpo $(DEPDIR)/tshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='tshark-frame_tvbuff.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c

tshark-frame_tvbuff.obj: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-frame_tvbuff.obj -MD -MP -MF $(DEPDIR)/tshark-frame_tvbuff.Tpo -c -o tshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-frame_tvbuff.Tpo $(DEPDIR)/tshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='tshark-frame_tvbuff.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`

tshark-sync_pipe_write.o: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-sync_pipe_write.o -MD -MP -MF $(DEPDIR)/tshark-sync_pipe_write.Tpo -c -o tshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-sync_pipe_write.Tpo $(DEPDIR)/tshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='tshark-sync_pipe_write.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c

tshark-sync_pipe_write.obj: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-sync_pipe_write.obj -MD -MP -MF $(DEPDIR)/tshark-sync_pipe_write.Tpo -c -o tshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-sync_pipe_write.Tpo $(DEPDIR)/tshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='tshark-sync_pipe_write.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`

tshark-extcap.o: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-extcap.o -MD -MP -MF $(DEPDIR)/tshark-extcap.Tpo -c -o tshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-extcap.Tpo $(DEPDIR)/tshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='tshark-extcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c

tshark-extcap.obj: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-extcap.obj -MD -MP -MF $(DEPDIR)/tshark-extcap.Tpo -c -o tshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-extcap.Tpo $(DEPDIR)/tshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='tshark-extcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`

tshark-extcap_parser.o: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-extcap_parser.o -MD -MP -MF $(DEPDIR)/tshark-extcap_parser.Tpo -c -o tshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-extcap_parser.Tpo $(DEPDIR)/tshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='tshark-extcap_parser.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c

tshark-extcap_parser.obj: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-extcap_parser.obj -MD -MP -MF $(DEPDIR)/tshark-extcap_parser.Tpo -c -o tshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-extcap_parser.Tpo $(DEPDIR)/tshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='tshark-extcap_parser.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`

tshark-capture_opts.o: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-capture_opts.o -MD -MP -MF $(DEPDIR)/tshark-capture_opts.Tpo -c -o tshark-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-capture_opts.Tpo $(DEPDIR)/tshark-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='tshark-capture_opts.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c

tshark-capture_opts.obj: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-capture_opts.obj -MD -MP -MF $(DEPDIR)/tshark-capture_opts.Tpo -c -o tshark-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-capture_opts.Tpo $(DEPDIR)/tshark-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='tshark-capture_opts.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`

tshark-tshark.o: tshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-tshark.o -MD -MP -MF $(DEPDIR)/tshark-tshark.Tpo -c -o tshark-tshark.o `test -f 'tshark.c' || echo '$(srcdir)/'`tshark.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-tshark.Tpo $(DEPDIR)/tshark-tshark.Po
#	$(AM_V_CC)source='tshark.c' object='tshark-tshark.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-tshark.o `test -f 'tshark.c' || echo '$(srcdir)/'`tshark.c

tshark-tshark.obj: tshark.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-tshark.obj -MD -MP -MF $(DEPDIR)/tshark-tshark.Tpo -c -o tshark-tshark.obj `if test -f 'tshark.c'; then $(CYGPATH_W) 'tshark.c'; else $(CYGPATH_W) '$(srcdir)/tshark.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-tshark.Tpo $(DEPDIR)/tshark-tshark.Po
#	$(AM_V_CC)source='tshark.c' object='tshark-tshark.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-tshark.obj `if test -f 'tshark.c'; then $(CYGPATH_W) 'tshark.c'; else $(CYGPATH_W) '$(srcdir)/tshark.c'; fi`

tshark-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-version_info.o -MD -MP -MF $(DEPDIR)/tshark-version_info.Tpo -c -o tshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-version_info.Tpo $(DEPDIR)/tshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='tshark-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

tshark-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tshark-version_info.obj -MD -MP -MF $(DEPDIR)/tshark-version_info.Tpo -c -o tshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/tshark-version_info.Tpo $(DEPDIR)/tshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='tshark-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

wireshark-cfile.o: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-cfile.o -MD -MP -MF $(DEPDIR)/wireshark-cfile.Tpo -c -o wireshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-cfile.Tpo $(DEPDIR)/wireshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='wireshark-cfile.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c

wireshark-cfile.obj: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-cfile.obj -MD -MP -MF $(DEPDIR)/wireshark-cfile.Tpo -c -o wireshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-cfile.Tpo $(DEPDIR)/wireshark-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='wireshark-cfile.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`

wireshark-file_packet_provider.o: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-file_packet_provider.o -MD -MP -MF $(DEPDIR)/wireshark-file_packet_provider.Tpo -c -o wireshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-file_packet_provider.Tpo $(DEPDIR)/wireshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='wireshark-file_packet_provider.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c

wireshark-file_packet_provider.obj: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-file_packet_provider.obj -MD -MP -MF $(DEPDIR)/wireshark-file_packet_provider.Tpo -c -o wireshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-file_packet_provider.Tpo $(DEPDIR)/wireshark-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='wireshark-file_packet_provider.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`

wireshark-frame_tvbuff.o: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-frame_tvbuff.o -MD -MP -MF $(DEPDIR)/wireshark-frame_tvbuff.Tpo -c -o wireshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-frame_tvbuff.Tpo $(DEPDIR)/wireshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='wireshark-frame_tvbuff.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c

wireshark-frame_tvbuff.obj: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-frame_tvbuff.obj -MD -MP -MF $(DEPDIR)/wireshark-frame_tvbuff.Tpo -c -o wireshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-frame_tvbuff.Tpo $(DEPDIR)/wireshark-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='wireshark-frame_tvbuff.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`

wireshark-sync_pipe_write.o: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-sync_pipe_write.o -MD -MP -MF $(DEPDIR)/wireshark-sync_pipe_write.Tpo -c -o wireshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-sync_pipe_write.Tpo $(DEPDIR)/wireshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='wireshark-sync_pipe_write.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c

wireshark-sync_pipe_write.obj: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-sync_pipe_write.obj -MD -MP -MF $(DEPDIR)/wireshark-sync_pipe_write.Tpo -c -o wireshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-sync_pipe_write.Tpo $(DEPDIR)/wireshark-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='wireshark-sync_pipe_write.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`

wireshark-extcap.o: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-extcap.o -MD -MP -MF $(DEPDIR)/wireshark-extcap.Tpo -c -o wireshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-extcap.Tpo $(DEPDIR)/wireshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='wireshark-extcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c

wireshark-extcap.obj: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-extcap.obj -MD -MP -MF $(DEPDIR)/wireshark-extcap.Tpo -c -o wireshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-extcap.Tpo $(DEPDIR)/wireshark-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='wireshark-extcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`

wireshark-extcap_parser.o: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-extcap_parser.o -MD -MP -MF $(DEPDIR)/wireshark-extcap_parser.Tpo -c -o wireshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-extcap_parser.Tpo $(DEPDIR)/wireshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='wireshark-extcap_parser.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c

wireshark-extcap_parser.obj: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-extcap_parser.obj -MD -MP -MF $(DEPDIR)/wireshark-extcap_parser.Tpo -c -o wireshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-extcap_parser.Tpo $(DEPDIR)/wireshark-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='wireshark-extcap_parser.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`

wireshark-capture_info.o: capture_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-capture_info.o -MD -MP -MF $(DEPDIR)/wireshark-capture_info.Tpo -c -o wireshark-capture_info.o `test -f 'capture_info.c' || echo '$(srcdir)/'`capture_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-capture_info.Tpo $(DEPDIR)/wireshark-capture_info.Po
#	$(AM_V_CC)source='capture_info.c' object='wireshark-capture_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-capture_info.o `test -f 'capture_info.c' || echo '$(srcdir)/'`capture_info.c

wireshark-capture_info.obj: capture_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-capture_info.obj -MD -MP -MF $(DEPDIR)/wireshark-capture_info.Tpo -c -o wireshark-capture_info.obj `if test -f 'capture_info.c'; then $(CYGPATH_W) 'capture_info.c'; else $(CYGPATH_W) '$(srcdir)/capture_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-capture_info.Tpo $(DEPDIR)/wireshark-capture_info.Po
#	$(AM_V_CC)source='capture_info.c' object='wireshark-capture_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-capture_info.obj `if test -f 'capture_info.c'; then $(CYGPATH_W) 'capture_info.c'; else $(CYGPATH_W) '$(srcdir)/capture_info.c'; fi`

wireshark-capture_opts.o: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-capture_opts.o -MD -MP -MF $(DEPDIR)/wireshark-capture_opts.Tpo -c -o wireshark-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-capture_opts.Tpo $(DEPDIR)/wireshark-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='wireshark-capture_opts.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c

wireshark-capture_opts.obj: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-capture_opts.obj -MD -MP -MF $(DEPDIR)/wireshark-capture_opts.Tpo -c -o wireshark-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-capture_opts.Tpo $(DEPDIR)/wireshark-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='wireshark-capture_opts.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`

wireshark-file.o: file.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-file.o -MD -MP -MF $(DEPDIR)/wireshark-file.Tpo -c -o wireshark-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-file.Tpo $(DEPDIR)/wireshark-file.Po
#	$(AM_V_CC)source='file.c' object='wireshark-file.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c

wireshark-file.obj: file.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-file.obj -MD -MP -MF $(DEPDIR)/wireshark-file.Tpo -c -o wireshark-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-file.Tpo $(DEPDIR)/wireshark-file.Po
#	$(AM_V_CC)source='file.c' object='wireshark-file.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`

wireshark-fileset.o: fileset.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-fileset.o -MD -MP -MF $(DEPDIR)/wireshark-fileset.Tpo -c -o wireshark-fileset.o `test -f 'fileset.c' || echo '$(srcdir)/'`fileset.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-fileset.Tpo $(DEPDIR)/wireshark-fileset.Po
#	$(AM_V_CC)source='fileset.c' object='wireshark-fileset.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-fileset.o `test -f 'fileset.c' || echo '$(srcdir)/'`fileset.c

wireshark-fileset.obj: fileset.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-fileset.obj -MD -MP -MF $(DEPDIR)/wireshark-fileset.Tpo -c -o wireshark-fileset.obj `if test -f 'fileset.c'; then $(CYGPATH_W) 'fileset.c'; else $(CYGPATH_W) '$(srcdir)/fileset.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-fileset.Tpo $(DEPDIR)/wireshark-fileset.Po
#	$(AM_V_CC)source='fileset.c' object='wireshark-fileset.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-fileset.obj `if test -f 'fileset.c'; then $(CYGPATH_W) 'fileset.c'; else $(CYGPATH_W) '$(srcdir)/fileset.c'; fi`

wireshark-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-version_info.o -MD -MP -MF $(DEPDIR)/wireshark-version_info.Tpo -c -o wireshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-version_info.Tpo $(DEPDIR)/wireshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='wireshark-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

wireshark-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark-version_info.obj -MD -MP -MF $(DEPDIR)/wireshark-version_info.Tpo -c -o wireshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-version_info.Tpo $(DEPDIR)/wireshark-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='wireshark-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

wireshark_gtk-cfile.o: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-cfile.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-cfile.Tpo -c -o wireshark_gtk-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-cfile.Tpo $(DEPDIR)/wireshark_gtk-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='wireshark_gtk-cfile.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-cfile.o `test -f 'cfile.c' || echo '$(srcdir)/'`cfile.c

wireshark_gtk-cfile.obj: cfile.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-cfile.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-cfile.Tpo -c -o wireshark_gtk-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-cfile.Tpo $(DEPDIR)/wireshark_gtk-cfile.Po
#	$(AM_V_CC)source='cfile.c' object='wireshark_gtk-cfile.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-cfile.obj `if test -f 'cfile.c'; then $(CYGPATH_W) 'cfile.c'; else $(CYGPATH_W) '$(srcdir)/cfile.c'; fi`

wireshark_gtk-file_packet_provider.o: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-file_packet_provider.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-file_packet_provider.Tpo -c -o wireshark_gtk-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-file_packet_provider.Tpo $(DEPDIR)/wireshark_gtk-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='wireshark_gtk-file_packet_provider.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-file_packet_provider.o `test -f 'file_packet_provider.c' || echo '$(srcdir)/'`file_packet_provider.c

wireshark_gtk-file_packet_provider.obj: file_packet_provider.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-file_packet_provider.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-file_packet_provider.Tpo -c -o wireshark_gtk-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-file_packet_provider.Tpo $(DEPDIR)/wireshark_gtk-file_packet_provider.Po
#	$(AM_V_CC)source='file_packet_provider.c' object='wireshark_gtk-file_packet_provider.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-file_packet_provider.obj `if test -f 'file_packet_provider.c'; then $(CYGPATH_W) 'file_packet_provider.c'; else $(CYGPATH_W) '$(srcdir)/file_packet_provider.c'; fi`

wireshark_gtk-frame_tvbuff.o: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-frame_tvbuff.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-frame_tvbuff.Tpo -c -o wireshark_gtk-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-frame_tvbuff.Tpo $(DEPDIR)/wireshark_gtk-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='wireshark_gtk-frame_tvbuff.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-frame_tvbuff.o `test -f 'frame_tvbuff.c' || echo '$(srcdir)/'`frame_tvbuff.c

wireshark_gtk-frame_tvbuff.obj: frame_tvbuff.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-frame_tvbuff.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-frame_tvbuff.Tpo -c -o wireshark_gtk-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-frame_tvbuff.Tpo $(DEPDIR)/wireshark_gtk-frame_tvbuff.Po
#	$(AM_V_CC)source='frame_tvbuff.c' object='wireshark_gtk-frame_tvbuff.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-frame_tvbuff.obj `if test -f 'frame_tvbuff.c'; then $(CYGPATH_W) 'frame_tvbuff.c'; else $(CYGPATH_W) '$(srcdir)/frame_tvbuff.c'; fi`

wireshark_gtk-sync_pipe_write.o: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-sync_pipe_write.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-sync_pipe_write.Tpo -c -o wireshark_gtk-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-sync_pipe_write.Tpo $(DEPDIR)/wireshark_gtk-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='wireshark_gtk-sync_pipe_write.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-sync_pipe_write.o `test -f 'sync_pipe_write.c' || echo '$(srcdir)/'`sync_pipe_write.c

wireshark_gtk-sync_pipe_write.obj: sync_pipe_write.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-sync_pipe_write.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-sync_pipe_write.Tpo -c -o wireshark_gtk-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-sync_pipe_write.Tpo $(DEPDIR)/wireshark_gtk-sync_pipe_write.Po
#	$(AM_V_CC)source='sync_pipe_write.c' object='wireshark_gtk-sync_pipe_write.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-sync_pipe_write.obj `if test -f 'sync_pipe_write.c'; then $(CYGPATH_W) 'sync_pipe_write.c'; else $(CYGPATH_W) '$(srcdir)/sync_pipe_write.c'; fi`

wireshark_gtk-extcap.o: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-extcap.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-extcap.Tpo -c -o wireshark_gtk-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-extcap.Tpo $(DEPDIR)/wireshark_gtk-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='wireshark_gtk-extcap.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-extcap.o `test -f 'extcap.c' || echo '$(srcdir)/'`extcap.c

wireshark_gtk-extcap.obj: extcap.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-extcap.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-extcap.Tpo -c -o wireshark_gtk-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-extcap.Tpo $(DEPDIR)/wireshark_gtk-extcap.Po
#	$(AM_V_CC)source='extcap.c' object='wireshark_gtk-extcap.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-extcap.obj `if test -f 'extcap.c'; then $(CYGPATH_W) 'extcap.c'; else $(CYGPATH_W) '$(srcdir)/extcap.c'; fi`

wireshark_gtk-extcap_parser.o: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-extcap_parser.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-extcap_parser.Tpo -c -o wireshark_gtk-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-extcap_parser.Tpo $(DEPDIR)/wireshark_gtk-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='wireshark_gtk-extcap_parser.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-extcap_parser.o `test -f 'extcap_parser.c' || echo '$(srcdir)/'`extcap_parser.c

wireshark_gtk-extcap_parser.obj: extcap_parser.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-extcap_parser.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-extcap_parser.Tpo -c -o wireshark_gtk-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-extcap_parser.Tpo $(DEPDIR)/wireshark_gtk-extcap_parser.Po
#	$(AM_V_CC)source='extcap_parser.c' object='wireshark_gtk-extcap_parser.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-extcap_parser.obj `if test -f 'extcap_parser.c'; then $(CYGPATH_W) 'extcap_parser.c'; else $(CYGPATH_W) '$(srcdir)/extcap_parser.c'; fi`

wireshark_gtk-capture_info.o: capture_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-capture_info.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-capture_info.Tpo -c -o wireshark_gtk-capture_info.o `test -f 'capture_info.c' || echo '$(srcdir)/'`capture_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-capture_info.Tpo $(DEPDIR)/wireshark_gtk-capture_info.Po
#	$(AM_V_CC)source='capture_info.c' object='wireshark_gtk-capture_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-capture_info.o `test -f 'capture_info.c' || echo '$(srcdir)/'`capture_info.c

wireshark_gtk-capture_info.obj: capture_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-capture_info.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-capture_info.Tpo -c -o wireshark_gtk-capture_info.obj `if test -f 'capture_info.c'; then $(CYGPATH_W) 'capture_info.c'; else $(CYGPATH_W) '$(srcdir)/capture_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-capture_info.Tpo $(DEPDIR)/wireshark_gtk-capture_info.Po
#	$(AM_V_CC)source='capture_info.c' object='wireshark_gtk-capture_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-capture_info.obj `if test -f 'capture_info.c'; then $(CYGPATH_W) 'capture_info.c'; else $(CYGPATH_W) '$(srcdir)/capture_info.c'; fi`

wireshark_gtk-capture_opts.o: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-capture_opts.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-capture_opts.Tpo -c -o wireshark_gtk-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-capture_opts.Tpo $(DEPDIR)/wireshark_gtk-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='wireshark_gtk-capture_opts.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-capture_opts.o `test -f 'capture_opts.c' || echo '$(srcdir)/'`capture_opts.c

wireshark_gtk-capture_opts.obj: capture_opts.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-capture_opts.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-capture_opts.Tpo -c -o wireshark_gtk-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-capture_opts.Tpo $(DEPDIR)/wireshark_gtk-capture_opts.Po
#	$(AM_V_CC)source='capture_opts.c' object='wireshark_gtk-capture_opts.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-capture_opts.obj `if test -f 'capture_opts.c'; then $(CYGPATH_W) 'capture_opts.c'; else $(CYGPATH_W) '$(srcdir)/capture_opts.c'; fi`

wireshark_gtk-file.o: file.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-file.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-file.Tpo -c -o wireshark_gtk-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-file.Tpo $(DEPDIR)/wireshark_gtk-file.Po
#	$(AM_V_CC)source='file.c' object='wireshark_gtk-file.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c

wireshark_gtk-file.obj: file.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-file.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-file.Tpo -c -o wireshark_gtk-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-file.Tpo $(DEPDIR)/wireshark_gtk-file.Po
#	$(AM_V_CC)source='file.c' object='wireshark_gtk-file.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`

wireshark_gtk-fileset.o: fileset.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-fileset.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-fileset.Tpo -c -o wireshark_gtk-fileset.o `test -f 'fileset.c' || echo '$(srcdir)/'`fileset.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-fileset.Tpo $(DEPDIR)/wireshark_gtk-fileset.Po
#	$(AM_V_CC)source='fileset.c' object='wireshark_gtk-fileset.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-fileset.o `test -f 'fileset.c' || echo '$(srcdir)/'`fileset.c

wireshark_gtk-fileset.obj: fileset.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-fileset.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-fileset.Tpo -c -o wireshark_gtk-fileset.obj `if test -f 'fileset.c'; then $(CYGPATH_W) 'fileset.c'; else $(CYGPATH_W) '$(srcdir)/fileset.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-fileset.Tpo $(DEPDIR)/wireshark_gtk-fileset.Po
#	$(AM_V_CC)source='fileset.c' object='wireshark_gtk-fileset.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-fileset.obj `if test -f 'fileset.c'; then $(CYGPATH_W) 'fileset.c'; else $(CYGPATH_W) '$(srcdir)/fileset.c'; fi`

wireshark_gtk-version_info.o: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-version_info.o -MD -MP -MF $(DEPDIR)/wireshark_gtk-version_info.Tpo -c -o wireshark_gtk-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-version_info.Tpo $(DEPDIR)/wireshark_gtk-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='wireshark_gtk-version_info.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-version_info.o `test -f 'version_info.c' || echo '$(srcdir)/'`version_info.c

wireshark_gtk-version_info.obj: version_info.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wireshark_gtk-version_info.obj -MD -MP -MF $(DEPDIR)/wireshark_gtk-version_info.Tpo -c -o wireshark_gtk-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark_gtk-version_info.Tpo $(DEPDIR)/wireshark_gtk-version_info.Po
#	$(AM_V_CC)source='version_info.c' object='wireshark_gtk-version_info.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wireshark_gtk-version_info.obj `if test -f 'version_info.c'; then $(CYGPATH_W) 'version_info.c'; else $(CYGPATH_W) '$(srcdir)/version_info.c'; fi`

.cpp.o:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

wireshark-wireshark-qt.o: wireshark-qt.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wireshark-wireshark-qt.o -MD -MP -MF $(DEPDIR)/wireshark-wireshark-qt.Tpo -c -o wireshark-wireshark-qt.o `test -f 'wireshark-qt.cpp' || echo '$(srcdir)/'`wireshark-qt.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-wireshark-qt.Tpo $(DEPDIR)/wireshark-wireshark-qt.Po
#	$(AM_V_CXX)source='wireshark-qt.cpp' object='wireshark-wireshark-qt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wireshark-wireshark-qt.o `test -f 'wireshark-qt.cpp' || echo '$(srcdir)/'`wireshark-qt.cpp

wireshark-wireshark-qt.obj: wireshark-qt.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wireshark-wireshark-qt.obj -MD -MP -MF $(DEPDIR)/wireshark-wireshark-qt.Tpo -c -o wireshark-wireshark-qt.obj `if test -f 'wireshark-qt.cpp'; then $(CYGPATH_W) 'wireshark-qt.cpp'; else $(CYGPATH_W) '$(srcdir)/wireshark-qt.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/wireshark-wireshark-qt.Tpo $(DEPDIR)/wireshark-wireshark-qt.Po
#	$(AM_V_CXX)source='wireshark-qt.cpp' object='wireshark-wireshark-qt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wireshark_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wireshark-wireshark-qt.obj `if test -f 'wireshark-qt.cpp'; then $(CYGPATH_W) 'wireshark-qt.cpp'; else $(CYGPATH_W) '$(srcdir)/wireshark-qt.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_diameterDATA: $(dist_diameter_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_diameter_DATA)'; test -n "$(diameterdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(diameterdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(diameterdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(diameterdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(diameterdir)" || exit $$?; \
	done

uninstall-dist_diameterDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_diameter_DATA)'; test -n "$(diameterdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(diameterdir)'; $(am__uninstall_files_from_dir)
install-dist_dtdsDATA: $(dist_dtds_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_dtds_DATA)'; test -n "$(dtdsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dtdsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dtdsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dtdsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dtdsdir)" || exit $$?; \
	done

uninstall-dist_dtdsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dtds_DATA)'; test -n "$(dtdsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dtdsdir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-dist_radiusDATA: $(dist_radius_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_radius_DATA)'; test -n "$(radiusdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(radiusdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(radiusdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(radiusdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(radiusdir)" || exit $$?; \
	done

uninstall-dist_radiusDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_radius_DATA)'; test -n "$(radiusdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(radiusdir)'; $(am__uninstall_files_from_dir)
install-dist_tpncpDATA: $(dist_tpncp_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_tpncp_DATA)'; test -n "$(tpncpdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(tpncpdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(tpncpdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tpncpdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tpncpdir)" || exit $$?; \
	done

uninstall-dist_tpncpDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_tpncp_DATA)'; test -n "$(tpncpdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(tpncpdir)'; $(am__uninstall_files_from_dir)
install-dist_wimaxasncpDATA: $(dist_wimaxasncp_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_wimaxasncp_DATA)'; test -n "$(wimaxasncpdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(wimaxasncpdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(wimaxasncpdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(wimaxasncpdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(wimaxasncpdir)" || exit $$?; \
	done

uninstall-dist_wimaxasncpDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_wimaxasncp_DATA)'; test -n "$(wimaxasncpdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(wimaxasncpdir)'; $(am__uninstall_files_from_dir)
install-nobase_dist_profilesDATA: $(nobase_dist_profiles_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_dist_profiles_DATA)'; test -n "$(profilesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(profilesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(profilesdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(profilesdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(profilesdir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(profilesdir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(profilesdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_dist_profilesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_dist_profiles_DATA)'; test -n "$(profilesdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(profilesdir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)
dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(diameterdir)" "$(DESTDIR)$(dtdsdir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(radiusdir)" "$(DESTDIR)$(tpncpdir)" "$(DESTDIR)$(wimaxasncpdir)" "$(DESTDIR)$(profilesdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f tools/oss-fuzzshark/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/oss-fuzzshark/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f text2pcap-scanner.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR) tools/oss-fuzzshark/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local install-dist_diameterDATA \
	install-dist_dtdsDATA install-dist_pkgdataDATA \
	install-dist_radiusDATA install-dist_tpncpDATA \
	install-dist_wimaxasncpDATA install-nobase_dist_profilesDATA \
	install-pkgconfigDATA install-pkgincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR) tools/oss-fuzzshark/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_diameterDATA \
	uninstall-dist_dtdsDATA uninstall-dist_pkgdataDATA \
	uninstall-dist_radiusDATA uninstall-dist_tpncpDATA \
	uninstall-dist_wimaxasncpDATA uninstall-local \
	uninstall-nobase_dist_profilesDATA uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: $(am__recursive_targets) all check install install-am \
	install-data-am install-exec-am install-strip uninstall-am

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-libtool clean-noinstPROGRAMS \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-hook install-data-local install-dist_diameterDATA \
	install-dist_dtdsDATA install-dist_pkgdataDATA \
	install-dist_radiusDATA install-dist_tpncpDATA \
	install-dist_wimaxasncpDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-info install-info-am install-man \
	install-nobase_dist_profilesDATA install-pdf install-pdf-am \
	install-pkgconfigDATA install-pkgincludeHEADERS install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_diameterDATA uninstall-dist_dtdsDATA \
	uninstall-dist_pkgdataDATA uninstall-dist_radiusDATA \
	uninstall-dist_tpncpDATA uninstall-dist_wimaxasncpDATA \
	uninstall-hook uninstall-local \
	uninstall-nobase_dist_profilesDATA uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS

.PRECIOUS: Makefile

$(LEMON):
	cd $(lemon_builddir) && $(MAKE)

.l.c:
	$(AM_V_LEX)$(LEX) -o$@ --header-file=$(@:.c=_lex.h) $<

#
# Build the version string
#
# FORCE is the portable version of .PHONY
FORCE:

version.h: FORCE
	$(AM_V_PERL)$(PERL) $(srcdir)/make-version.pl $(srcdir)
.sh:
	rm -f $@ $@.tmp
	$(editsh) $< > $@.tmp && chmod +x $@.tmp && mv $@.tmp $@

services:
	$(PYTHON) $(srcdir)/tools/make-services.py

install-exec-hook:
#	chgrp $(DUMPCAP_GROUP) $(DESTDIR)$(bindir)/dumpcap
#	$(SETCAP) cap_net_raw,cap_net_admin+ep $(DESTDIR)$(bindir)/dumpcap
#	chmod o-rws $(DESTDIR)$(bindir)/dumpcap
#	chmod o-rws $(DESTDIR)$(bindir)/dumpcap
#	chmod +s $(DESTDIR)$(bindir)/dumpcap

help/faq.txt: $(srcdir)/help/faq.py
	$(AM_V_GEN)(cd help ; \
	$(MAKE) faq.txt ;)

libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck

#
# Install icons and other desktop files for (for use with GNOME, KDE, or
# any other freedesktop.org-compliant desktops).
#
# We use $(datadir).  If the desktop doesn't look for them there,
# the desktop is broken; the latest XDG Base Directory Specification
# can be consulted at
#
#    http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
#
# We neither need nor want any of this if we're not building Wireshark
# (that being the only desktop app).
#
install-data-local:
#	$(MKDIR_P) $(DESTDIR)$(datadir)/mime/packages
#	$(INSTALL_DATA) $(srcdir)/wireshark-mime-package.xml $(DESTDIR)$(datadir)/mime/packages/wireshark.xml
#	$(MKDIR_P) $(DESTDIR)$(datadir)/appdata
#	$(INSTALL_DATA) $(srcdir)/wireshark.appdata.xml $(DESTDIR)$(datadir)/appdata/wireshark.appdata.xml
#	$(MKDIR_P) $(DESTDIR)$(datadir)/applications
#	$(INSTALL_DATA) $(srcdir)/wireshark.desktop $(srcdir)/wireshark-gtk.desktop $(DESTDIR)$(datadir)/applications
#	for size in 16 24 32 48 64 128 256; \
#	do \
#		$(MKDIR_P) $(DESTDIR)$(datadir)/icons/hicolor/$${size}x$${size}/apps ; \
#		$(INSTALL_DATA) $(srcdir)/image/wsicon$${size}.png $(DESTDIR)$(datadir)/icons/hicolor/$${size}x$${size}/apps/wireshark.png ; \
#		$(MKDIR_P) $(DESTDIR)$(datadir)/icons/hicolor/$${size}x$${size}/mimetypes ; \
#		$(INSTALL_DATA) $(srcdir)/image/WiresharkDoc-$${size}.png $(DESTDIR)$(datadir)/icons/hicolor/$${size}x$${size}/mimetypes/application-wireshark-doc.png ; \
#	done
#	$(MKDIR_P) $(DESTDIR)$(datadir)/icons/hicolor/scalable/apps
#	$(INSTALL_DATA) $(srcdir)/image/wsicon.svg $(DESTDIR)$(datadir)/icons/hicolor/scalable/apps/wireshark.svg

uninstall-local:
#	rm -f $(DESTDIR)$(datadir)/appdata/wireshark.appdata.xml
#	rm -f $(DESTDIR)$(datadir)/applications/wireshark.desktop
#	rm -f $(DESTDIR)$(datadir)/applications/wireshark-gtk.desktop
#	rm -f $(DESTDIR)$(datadir)/mime/packages/wireshark.xml
#	for size in 16 24 32 48 64 128 256; \
#	do \
#		rm -f $(DESTDIR)$(datadir)/icons/hicolor/$${size}x$${size}/apps/wireshark.png ; \
#		rm -f $(DESTDIR)$(datadir)/icons/hicolor/$${size}x$${size}/mimetypes/application-wireshark-doc.png ; \
#	done
#	rm -f $(DESTDIR)$(datadir)/icons/hicolor/scalable/apps/wireshark.svg

install-data-hook: update-databases-and-caches-install
uninstall-hook: update-databases-and-caches-uninstall

#
# ldconfig may be needed to update a shared library cache.
#
# update-desktop-database and update-mime-database may be needed on
# freedesktop.org desktops.
#
# gtk-update-icon-cache may be needed only if we're installing a GTK+
# version of Wireshark.
#
# Only ldconfig may be needed if we're not building Wireshark
# (that being the only desktop app).
#
update-databases-and-caches-common:
	@echo "-------------------------------------------------------------------------------"
	@echo "You may need to run \"ldconfig\" as root"
#	@echo "You may need to run \"update-desktop-database $(datadir)/applications\""
#	@echo "You may need to run \"update-mime-database $(datadir)/mime\""
#	@echo "You may need to run \"gtk-update-icon-cache -f -t $(datadir)/icons/hicolor\""
	@echo "-------------------------------------------------------------------------------"

update-databases-and-caches-install: update-databases-and-caches-common

update-databases-and-caches-uninstall: update-databases-and-caches-common

rpm-package: dist
	$(MAKE) -C packaging/rpm

test-programs:
	cd epan && $(MAKE) $@

checkapi_local:
	$(PERL) $(top_srcdir)/tools/checkAPIs.pl -build \
	-sourcedir=$(srcdir) \
	$(TSHARK_TAP_SRC) \
	$(wireshark_gtk_SOURCES)
#	$(EXTRA_wireshark_gtk_SOURCES)

checkapi: checkapi_local
	cd wiretap && $(MAKE) checkapi
	cd codecs && $(MAKE) checkapi
	cd capchild && $(MAKE) checkapi
	cd caputils && $(MAKE) checkapi
	cd ui && $(MAKE) checkapi
	cd ui/gtk && $(MAKE) checkapi
	cd ui/cli && $(MAKE) checkapi
	cd epan && $(MAKE) checkapi
	cd epan/crypt && $(MAKE) checkapi
	cd epan/dfilter && $(MAKE) checkapi
	cd epan/ftypes && $(MAKE) checkapi
	cd epan/wmem && $(MAKE) checkapi
	cd epan/wslua && $(MAKE) checkapi
	cd epan/dissectors && $(MAKE) checkapi
	cd plugins && $(MAKE) checkapi
	cd randpkt_core && $(MAKE) checkapi
	cd writecap && $(MAKE) checkapi
	cd wsutil && $(MAKE) checkapi

# --external-sources requires 0.4.0 or later.
shellcheck:
	cd $(top_srcdir) && \
	$(SHELLCHECK) --external-sources \
	  tools/fuzz-test.sh \
	  tools/randpkt-test.sh \
	  tools/test-captures.sh \
	  tools/valgrind-wireshark.sh

wsar_html: doxygen.cfg doxygen_global.cfg FORCE
#	rm -rf wsar_html
#	cd epan && $(MAKE) $@
#	cd capchild && $(MAKE) $@
#	cd caputils && $(MAKE) $@
#	cd randpkt_core && $(MAKE) $@
#	cd ui && $(MAKE) $@
#	(umask 022 ; $(DOXYGEN) doxygen.cfg)

wsar-zip: wsar_html
#	rm -f wsar_html.zip
#	zip -rq wsar_html.zip wsar_html

# Update AUTHORS file with entries from git shortlog
gen-authors:
	cd $(top_srcdir) && $(PERL) tools/generate_authors.pl AUTHORS.src > AUTHORS

dist-hook:
	printf "git_description=%s\n" "$$(git -C $(top_srcdir) describe --match 'v[1-9]*')" \
		> $(top_distdir)/version.conf

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
